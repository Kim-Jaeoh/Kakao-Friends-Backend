{"version":3,"file":"static/js/490.e004b27d.chunk.js","mappings":"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","sources":["components/myPage/MyPageBasket.jsx","hooks/useBasketToggle.jsx","hooks/usePayReady.jsx","hooks/usePriceComma.jsx"],"sourcesContent":["import React, { useEffect, useState, lazy } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport { IoIosArrowForward } from \"react-icons/io\";\nimport { BiMinus, BiPlus } from \"react-icons/bi\";\nimport { IoCheckmarkCircleSharp, IoCloseOutline } from \"react-icons/io5\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  CheckItem,\n  Decrement,\n  Increment,\n  setBasket,\n  UnCheckItem,\n} from \"../../reducer/user\";\nimport { useBasketToggle } from \"../../hooks/useBasketToggle\";\nimport { usePriceComma } from \"../../hooks/usePriceComma\";\nimport { usePayReady } from \"../../hooks/usePayReady\";\nimport { LoginPopupModal } from \"../modal/LoginPopupModal\";\nimport { updateDoc } from \"firebase/firestore\";\nimport axios from \"axios\";\n// import ProductRecommend from \"../utils/ProductRecommend\";\nconst NotInfo = lazy(() => import(\"../utils/NotInfo\"));\nconst ProductRecommend = lazy(() => import(\"../utils/ProductRecommend\"));\n\nconst Container = styled.div`\n  padding-bottom: 80px;\n  @media screen and (min-width: 375px) {\n    padding-bottom: 80px;\n  }\n`;\n\nconst BasketBox = styled.div``;\n\nconst BasketList = styled.div``;\n\nconst DeliveryInfoBox = styled.div`\n  position: relative;\n  margin-top: 26px;\n  padding: 0 20px;\n  white-space: nowrap;\n`;\n\nconst DeliveryInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst DeliveryFreeTextBox = styled.strong`\n  display: block;\n  max-width: 172px;\n  font-size: 15px;\n  line-height: 20px;\n  font-weight: bold;\n\n  span {\n    color: #ff447f;\n    font-size: 15px;\n    line-height: 20px;\n  }\n`;\n\nconst DeliveryPriceSave = styled(Link)`\n  font-size: 14px;\n  line-height: 16px;\n  white-space: nowrap;\n  letter-spacing: -0.025em;\n  display: flex;\n  align-items: center;\n\n  svg {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst DeliveryPriceGaugebox = styled.div`\n  position: relative;\n  height: 6px;\n  margin: 10px 0;\n  border-radius: 3px;\n  background-color: #eff0f2;\n`;\n\nconst DeliveryPriceGaugeBar = styled.div`\n  /* overflow: hidden; */\n  width: ${(props) => props.totalProgress + \"%\"};\n  max-width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 100%;\n  border-radius: 3px;\n  background-color: #ff447f;\n  transition: width 0.25s cubic-bezier(0, 0, 0.2, 1);\n`;\n\nconst DeliveryPriceGaugeCircleBox = styled.div`\n  position: absolute;\n  right: 0;\n  top: 3px;\n  width: 16px;\n  height: 16px;\n  border-radius: 100%;\n  border: 5px solid transparent;\n  transform: translate(50%, -50%);\n  box-sizing: border-box;\n`;\n\nconst DeliveryPriceGaugeCircle = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  width: 16px;\n  height: 16px;\n  transform: translate(-50%, -50%);\n\n  div {\n    width: 100%;\n    height: 100%;\n    background-color: #fff;\n    border-radius: 50%;\n    transform: translate3d(0px, 0px, 0px);\n    content-visibility: visible;\n    position: relative;\n\n    ::before {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: absolute;\n      content: \"\";\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      border: 4px solid #ff447f;\n      box-sizing: border-box;\n      animation: fade 1s infinite;\n    }\n\n    @keyframes fade {\n      0% {\n        opacity: 0.3;\n      }\n      50% {\n        opacity: 1;\n      }\n      100% {\n        opacity: 0.2;\n      }\n    }\n  }\n`;\n\nconst CheckBox = styled.div`\n  position: relative;\n  padding: 16px 20px;\n  border-bottom: 4px solid #f7f7f7;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Check = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  cursor: pointer;\n  font-weight: bold;\n`;\n\nconst CheckIcon = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 6px;\n  cursor: pointer;\n\n  svg {\n    color: ${(props) => (props.check ? \"#3c404b\" : \"#d8d9df\")};\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nconst SelectDelete = styled.button`\n  position: absolute;\n  right: 20px;\n  top: 18px;\n  line-height: 16px;\n  color: #747475;\n`;\n\nconst ListCart = styled.ul``;\n\nconst List = styled.li`\n  position: relative;\n  padding-bottom: 18px;\n  margin: 20px 20px 0;\n  min-height: 120px;\n  border-bottom: 1px solid #eff0f2;\n  box-sizing: border-box;\n\n  @media screen and (min-width: 640px) {\n    position: relative;\n    padding-bottom: 20px;\n  }\n`;\n\nconst ListContents = styled.div`\n  overflow: hidden;\n  /* position: relative; */\n  padding-left: 29px;\n`;\n\nconst ListCheckIcon = styled.label`\n  position: absolute;\n  left: 0;\n  top: 0;\n  cursor: pointer;\n\n  svg {\n    color: ${(props) => (props.check ? \"#3c404b\" : \"#d8d9df\")};\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nconst CheckInput = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  background: none;\n  border-radius: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  outline: 0;\n  opacity: 0;\n  cursor: pointer;\n`;\n\nconst ListImageBox = styled(Link)`\n  float: left;\n  position: relative;\n  width: 80px;\n  height: 80px;\n  border-radius: 6px;\n\n  ::before {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 6px;\n    background-color: rgba(0, 0, 0, 0.02);\n    content: \"\";\n  }\n`;\n\nconst ListImage = styled.div`\n  display: block;\n  overflow: hidden;\n  border-radius: 6px;\n\n  img {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst ListInfoBox = styled.div`\n  overflow: hidden;\n  position: relative;\n  height: 100%;\n  padding: 0 28px 0 12px;\n  box-sizing: border-box;\n`;\n\nconst ListTitle = styled(Link)`\n  display: block;\n  display: -webkit-box;\n  overflow: hidden;\n  margin-bottom: 4px;\n  font-size: 15px;\n  line-height: 20px;\n  max-height: 40px;\n  letter-spacing: -0.02em;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-break: break-all;\n`;\n\nconst ListPriceBox = styled.div``;\n\nconst ListPrice = styled.strong`\n  display: inline-block;\n  height: 24px;\n  font-size: 15px;\n  line-height: 24px;\n  vertical-align: top;\n  font-weight: bold;\n\n  span {\n    font-size: 16px;\n  }\n`;\n\nconst ItemCounterBox = styled.div`\n  margin-top: 10px;\n`;\n\nconst ItemCounter = styled.div`\n  display: block;\n  position: relative;\n  width: 114px;\n  padding: 0 28px;\n  box-sizing: border-box;\n\n  input,\n  div {\n    display: block;\n    width: 58px;\n    height: 36px;\n    border: 1px solid #dedfe0;\n    border-radius: 8px;\n    line-height: 20px;\n    background-color: #fff;\n    box-sizing: border-box;\n    outline: none;\n    resize: none;\n    box-shadow: none;\n    letter-spacing: -0.035em;\n    text-align: center;\n    font-size: 14px;\n    padding: 8px 15px;\n\n    ::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n  }\n`;\n\nconst ItemQuanityNumber = styled.div`\n  cursor: default;\n  user-select: none;\n`;\n\nconst QuanityButton = styled.button`\n  position: absolute;\n  top: 6px;\n  border: 1px solid #dedfe0;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :first-of-type {\n    left: 0;\n    svg {\n      color: ${(props) => (props.quanity > 1 ? \"#3c404b\" : \"#dedfe0\")};\n    }\n  }\n\n  :last-of-type {\n    right: 0;\n    svg {\n      color: ${(props) => (props.quanity >= 1 ? \"#3c404b\" : \"#dedfe0\")};\n    }\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nconst ListDelete = styled.button`\n  position: absolute;\n  z-index: 10;\n  top: -3px;\n  right: -7px;\n  width: 30px;\n  height: 30px;\n\n  svg {\n    font-size: 24px;\n    color: #bdbdbd;\n  }\n`;\n\nconst BasketBillBox = styled.div`\n  font-style: normal;\n  font-weight: 400;\n`;\n\nconst BasketListTotalPrice = styled.ul`\n  position: relative;\n  z-index: 1;\n  padding: 28px 20px 0;\n  border-top: 1px solid #eff0f2;\n`;\n\nconst BasketListPrice = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 8px;\n  font-size: 15px;\n  line-height: 20px;\n\n  strong {\n    font-weight: bold;\n  }\n`;\n\nconst DescCart = styled.p`\n  margin-top: 31px;\n  padding: 0 20px 16px;\n  font-size: 13px;\n  line-height: 18px;\n  color: #aeaeaf;\n  letter-spacing: -0.035em;\n`;\n\nconst BasketBottomButton = styled.div`\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  z-index: 90;\n  width: 100%;\n\n  @media screen and (min-width: 640px) {\n    width: 640px;\n    left: 50%;\n    margin-left: -320px;\n  }\n`;\n\nconst OrderButton = styled.button`\n  display: block;\n  width: 100%;\n  height: 80px;\n  color: #fff;\n  background-color: ${(props) => (props.noChecked ? \"#d4d7e1\" : \"#fb2e45\")};\n  cursor: ${(props) => (props.noChecked ? \"default\" : \"pointer\")};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  -webkit-box-lines: multiple;\n  flex-wrap: wrap;\n  padding: 0 20px;\n  font-weight: 700;\n  font-size: 18px;\n  letter-spacing: -0.014em;\n\n  a {\n    color: #fff;\n  }\n`;\n\nconst MyPageBasket = () => {\n  const [checkBasketList, setCheckBasketList] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(\"\");\n  const [currentPrice, setCurrentPrice] = useState(0);\n  const [totalProgress, setTotalProgress] = useState(0);\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.user.currentUser);\n\n  const [loginPopupModal, setLoginPopupModal] = useState(false);\n  const toggleLoginPopupModal = () => setLoginPopupModal((prev) => !prev);\n\n  const { currentBasket, myInfo, docRef } = useBasketToggle(); //장바구니 커스텀 훅\n  const { PriceDeleteComma, PriceComma } = usePriceComma(); // 금액 콤마 커스텀 훅\n\n  const { next_redirect_pc_url: payReadyURL } = usePayReady(\n    currentBasket,\n    totalPrice,\n    \"basket\"\n  ); // 카카오페이 구매 커스텀 훅\n\n  // 배송 금액 바\n  useEffect(() => {\n    setTotalProgress(Math.round((currentPrice / 30000) * 100));\n  }, [currentPrice]);\n\n  // 페이지 이탈 시 전체 체크 활성화\n  useEffect(() => {\n    return () => {\n      currentBasket.map((obj) => dispatch(CheckItem(obj)));\n    };\n  }, []);\n\n  // 체크된 아이템 및 숫자\n  useEffect(() => {\n    setCheckBasketList(currentBasket.filter((item) => item.check)); // 체크된 아이템 숫자\n  }, [currentBasket]);\n\n  // 상품 가격 (체크된 것들만)\n  useEffect(() => {\n    if (checkBasketList.length !== 0) {\n      setCurrentPrice(\n        checkBasketList\n          ?.map((item) => PriceDeleteComma(item.price) * item.quanity)\n          ?.reduce((l, r) => l + r)\n      );\n    } else {\n      setCurrentPrice(0);\n    }\n  }, [currentBasket, checkBasketList]);\n\n  // 전체 가격\n  useEffect(() => {\n    if (currentPrice === 0) {\n      setTotalPrice(\"3000\");\n    } else {\n      setTotalPrice(currentPrice >= 30000 ? currentPrice : currentPrice + 3000);\n    }\n  }, [currentPrice]);\n\n  // 장바구니 개별 삭제\n  const BasketDeleteItem = async (itemId) => {\n    const filter = currentBasket?.filter((item) => item.product !== itemId);\n    dispatch(setBasket(filter));\n\n    if (currentUser.uid) {\n      const fbFilter = myInfo?.basket?.filter(\n        (item) => item?.product !== itemId\n      );\n      await updateDoc(docRef, {\n        basket: fbFilter,\n      });\n    }\n  };\n\n  // 선택 삭제\n  const selectDelete = async () => {\n    const filter = currentBasket?.filter((item) => item.check === false);\n    dispatch(setBasket(filter));\n\n    if (currentUser.uid) {\n      const fbFilter = myInfo?.basket?.filter((item) => item?.check === false);\n      await updateDoc(docRef, {\n        basket: fbFilter,\n      });\n    }\n  };\n\n  // // 수량 키보드 변경\n  // const onChange = useCallback(\n  //   (list, value) => {\n  //     if (isFocus === true) {\n  //       dispatch(InputChange(list, +value));\n  //     }\n  //   },\n  //   [dispatch, isFocus]\n  // );\n\n  // 전체 선택\n  const checkAllHandler = (checked) => {\n    if (checked) {\n      // 전체 선택 클릭 시 데이터의 모든 아이템(id)를 담은 배열로 checkItems 상태 업데이트\n      currentBasket.map((obj) => {\n        return dispatch(CheckItem(obj));\n      });\n    } else {\n      // 전체 선택 해제 시 checkItems 를 빈 배열로 상태 업데이트\n      currentBasket.map((obj) => {\n        return dispatch(UnCheckItem(obj));\n      });\n    }\n  };\n\n  // 개별 선택\n  const checkHandler = (check, itemId) => {\n    if (check) {\n      dispatch(CheckItem(itemId));\n    } else {\n      dispatch(UnCheckItem(itemId));\n    }\n  };\n\n  // 주문하기 새창\n  const orderClick = () => {\n    if (currentUser.uid) {\n      if (currentBasket.find((item) => item.check === true)) {\n        window.location.href = `${payReadyURL}`;\n      }\n    } else {\n      toggleLoginPopupModal();\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        {currentBasket?.length === 0 ? (\n          <NotInfo\n            url={\n              \"https://st.kakaocdn.net/commerce_ui/front-friendsshop/real/20221026/104605/assets/images/m960/ico_cart_empty.png\"\n            }\n            text={\"아직 관심 상품이 없네요!\"}\n            text2={\"귀여운 프렌즈 상품을 추천드릴게요\"}\n            btn={true}\n          />\n        ) : (\n          <BasketBox>\n            <BasketList>\n              <DeliveryInfoBox>\n                {totalPrice && (\n                  <>\n                    <DeliveryInfo>\n                      <DeliveryFreeTextBox>\n                        {currentPrice >= 30000 ? (\n                          <span>무료 배송</span>\n                        ) : (\n                          <>\n                            <span>{PriceComma(33000 - totalPrice)}</span>원 추가\n                            시 무료 배송\n                          </>\n                        )}\n                      </DeliveryFreeTextBox>\n                      {currentPrice <= 30000 && (\n                        <DeliveryPriceSave to=\"/product/realtime\">\n                          배송비 절약하기\n                          <span>\n                            <IoIosArrowForward />\n                          </span>\n                        </DeliveryPriceSave>\n                      )}\n                    </DeliveryInfo>\n                    <DeliveryPriceGaugebox>\n                      <DeliveryPriceGaugeBar totalProgress={totalProgress}>\n                        <DeliveryPriceGaugeCircleBox>\n                          <DeliveryPriceGaugeCircle>\n                            <div />\n                          </DeliveryPriceGaugeCircle>\n                        </DeliveryPriceGaugeCircleBox>\n                      </DeliveryPriceGaugeBar>\n                    </DeliveryPriceGaugebox>\n                  </>\n                )}\n              </DeliveryInfoBox>\n              <CheckBox>\n                <Check>\n                  <CheckIcon\n                    htmlFor=\"AllcheckBox\"\n                    name=\"AllcheckBox\"\n                    check={\n                      checkBasketList.length === currentBasket.length\n                        ? true\n                        : false\n                    }\n                  >\n                    <CheckInput\n                      id=\"AllcheckBox\"\n                      type=\"checkBox\"\n                      checked={\n                        checkBasketList.length === currentBasket.length\n                          ? true\n                          : false\n                      }\n                      onChange={(e) => {\n                        checkAllHandler(e.target.checked);\n                      }}\n                    />\n                    <IoCheckmarkCircleSharp />\n                  </CheckIcon>\n                  전체 {checkBasketList.length}\n                </Check>\n                <SelectDelete type=\"button\" onClick={selectDelete}>\n                  선택 삭제\n                </SelectDelete>\n              </CheckBox>\n              <ListCart>\n                {currentBasket?.map((list, index) => {\n                  return (\n                    <List key={list.product}>\n                      <ListContents>\n                        <ListCheckIcon\n                          htmlFor={`checkItem-${list.product}`}\n                          name={`select-${list.product}`}\n                          check={list.check}\n                        >\n                          <CheckInput\n                            id={`checkItem-${list.product}`}\n                            name={`select-${list.product}`}\n                            type=\"checkbox\"\n                            checked={list.check === true ? true : false}\n                            onChange={(e) => {\n                              checkHandler(e.target.checked, list);\n                            }}\n                          />\n                          <IoCheckmarkCircleSharp />\n                        </ListCheckIcon>\n                        <ListImageBox to={`/detail/${list.product}`}>\n                          <ListImage>\n                            <img\n                              src={list.image}\n                              alt={list.title}\n                              loading=\"lazy\"\n                            />\n                          </ListImage>\n                        </ListImageBox>\n                        <ListInfoBox>\n                          <ListTitle to={`/detail/${list.product}`}>\n                            {list.title}\n                          </ListTitle>\n                          <ListPriceBox>\n                            <ListPrice>\n                              <span>{list.price}</span>원\n                            </ListPrice>\n                          </ListPriceBox>\n                          <ItemCounterBox>\n                            <ItemCounter>\n                              <QuanityButton\n                                quanity={list.quanity}\n                                type=\"button\"\n                                onClick={(e) => dispatch(Decrement(list))}\n                              >\n                                <BiMinus />\n                              </QuanityButton>\n                              <ItemQuanityNumber>\n                                {list.quanity}\n                              </ItemQuanityNumber>\n                              {/* <input\n                                type=\"number\"\n                                value={list.quanity}\n                                onFocus={() => setIsFocus(true)}\n                                onBlur={() => setIsFocus(false)}\n                                min=\"1\"\n                                max=\"99\"\n                                onChange={(e) => onChange(list, e.target.value)}\n                                onWheel={(e) => e.target.blur()} // 마우스 휠 막기\n                              /> */}\n                              <QuanityButton\n                                quanity={list.quanity}\n                                type=\"button\"\n                                onClick={(e) => dispatch(Increment(list))}\n                              >\n                                <BiPlus />\n                              </QuanityButton>\n                            </ItemCounter>\n                          </ItemCounterBox>\n                        </ListInfoBox>\n                        <ListDelete\n                          onClick={() => BasketDeleteItem(list.product)}\n                        >\n                          <IoCloseOutline />\n                        </ListDelete>\n                      </ListContents>\n                    </List>\n                  );\n                })}\n              </ListCart>\n            </BasketList>\n            <BasketBillBox>\n              <BasketListTotalPrice>\n                <BasketListPrice>\n                  <span>상품 금액</span>\n                  <span>{PriceComma(currentPrice)}원</span>\n                </BasketListPrice>\n                <BasketListPrice>\n                  <span>배송비</span>\n                  <span>{currentPrice >= 30000 ? \"무료\" : \"3,000원\"}</span>\n                </BasketListPrice>\n                <BasketListPrice>\n                  <strong>총 결제금액</strong>\n                  <strong>{PriceComma(totalPrice)}원</strong>\n                </BasketListPrice>\n              </BasketListTotalPrice>\n              <DescCart>장바구니 상품은 최대 90일까지 보관됩니다.</DescCart>\n            </BasketBillBox>\n            <BasketBottomButton>\n              {totalPrice && (\n                <OrderButton\n                  noChecked={currentPrice === 0}\n                  onClick={orderClick}\n                >\n                  {currentPrice === 0\n                    ? \"주문하기\"\n                    : `${PriceComma(totalPrice)}원 주문하기`}\n                </OrderButton>\n              )}\n            </BasketBottomButton>\n          </BasketBox>\n        )}\n        <ProductRecommend />\n        {loginPopupModal && !currentUser.uid && (\n          <LoginPopupModal\n            loginPopupModal={loginPopupModal}\n            toggleLoginPopupModal={toggleLoginPopupModal}\n          />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default MyPageBasket;\n","import { doc, onSnapshot, updateDoc } from \"firebase/firestore\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { dbService } from \"../fbase\";\nimport { setBasket } from \"../reducer/user\";\n\nexport const useBasketToggle = () => {\n  const dispatch = useDispatch();\n  const [myInfo, setMyInfo] = useState({});\n  const [docRef, setDocRef] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(false);\n  const currentBasket = useSelector((state) => state.user.basket);\n  const currentUser = useSelector((state) => state.user.currentUser);\n\n  useEffect(() => {\n    if (currentUser.uid) {\n      setDocRef(doc(dbService, \"userInfo\", currentUser.uid.toString()));\n    }\n  }, [currentUser.uid]);\n\n  // Firebase 본인 정보 가져오기\n  useEffect(() => {\n    if (docRef) {\n      onSnapshot(docRef, (doc) => {\n        setMyInfo(doc.data());\n        setIsLogin(true);\n      });\n    }\n    // return () => setIsLogin(false);\n  }, [docRef]);\n\n  const toggleIcon =\n    // useCallback(\n    async (itemId, quanity) => {\n      const currentFinded = currentBasket?.find(\n        (item) => item.product === itemId.product\n      );\n\n      if (currentFinded === undefined) {\n        dispatch(\n          setBasket([\n            {\n              id: itemId.id,\n              product: itemId.product,\n              title: itemId.title,\n              price: itemId.price,\n              image: itemId.image,\n              quanity: quanity ? quanity : 1,\n              check: true,\n            },\n            ...currentBasket,\n          ])\n        );\n      } else {\n        const currentFilter = currentBasket?.filter(\n          (item) => item.product !== itemId.product\n        );\n        dispatch(setBasket(currentFilter));\n      }\n\n      if (currentUser.uid) {\n        const fbFinded = myInfo?.basket?.find(\n          (item) => item.product === itemId.product\n        );\n        if (fbFinded === undefined) {\n          await updateDoc(docRef, {\n            basket: [\n              ...myInfo?.basket,\n              {\n                id: itemId.id,\n                product: itemId.product,\n                title: itemId.title,\n                price: itemId.price,\n                image: itemId.image,\n                quanity: quanity ? quanity : 1,\n                check: true,\n              },\n            ],\n          });\n        } else {\n          const fbFilter = myInfo?.basket?.filter(\n            (item) => item.product !== itemId.product\n          );\n          await updateDoc(docRef, {\n            basket: fbFilter,\n          });\n        }\n      }\n    };\n  // [currentBasket, dispatch, docRef, isLogin, myInfo?.basket]\n  // );\n\n  return { toggleIcon, currentBasket, docRef, myInfo };\n};\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setOrder, setTotalPrice } from \"../reducer/user\";\n\nexport const usePayReady = (list, totalPrice, type) => {\n  const [obj, setObj] = useState([]);\n  // const [totalPrice, setTotalPrice] = useState(\"\");\n  const dispatch = useDispatch();\n\n  // 요청 단계 완료 시 승인 단계로 넘어가지는 URL (search 타입 지정)\n  const appUrl = `${process.env.REACT_APP_SERVER_PORT}/mypage/payresult?type=${\n    type === \"direct\" ? \"direct\" : \"basket\"\n  }`;\n  const failUrl = process.env.REACT_APP_SERVER_PORT;\n  const cancelUrl = process.env.REACT_APP_SERVER_PORT;\n\n  useEffect(() => {\n    let params = {};\n\n    if (list?.length !== 0) {\n      params = {\n        cid: \"TC0ONETIME\",\n        partner_order_id: \"partner_order_id\",\n        partner_user_id: \"partner_user_id\",\n        item_name:\n          list?.length === 1\n            ? `${list[0]?.title}`\n            : `${list[0]?.title} 외 ${list?.length - 1}건`,\n        quantity: list\n          ?.map((item) => item?.quanity)\n          ?.reduce((a, b) => a + b, 0),\n        total_amount: totalPrice || 3000,\n        vat_amount: 0,\n        tax_free_amount: 0,\n        approval_url: appUrl,\n        fail_url: failUrl,\n        cancel_url: cancelUrl,\n      };\n\n      const postKakaopay = async () => {\n        await axios(\n          // 프록시에 카카오 도메인을 설정했으므로 결제 준비 url만 넣기\n          {\n            // 설정한 매개변수들\n            method: \"POST\",\n            url: \"https://kapi.kakao.com/v1/payment/ready\",\n            params,\n            headers: {\n              // 카카오 developers에 등록한 admin키 주기\n              Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_ADMIN_KEY}`,\n              \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n            },\n          }\n        ).then((response) => {\n          // 응답에서 필요한 data 구조분해\n          const {\n            data: { next_redirect_pc_url, tid },\n          } = response;\n\n          if (type === \"direct\") {\n            list?.map((order) =>\n              dispatch(\n                setOrder([\n                  {\n                    id: order.id,\n                    quanity: order.quanity,\n                    price: order.price,\n                    product: order.product,\n                    image: order.image,\n                    title: order.title,\n                  },\n                ])\n              )\n            );\n          }\n\n          // 응답 data로 state 갱신\n          setObj({ next_redirect_pc_url, tid });\n          localStorage.setItem(\"tid\", tid);\n        });\n      };\n      postKakaopay();\n    }\n  }, [appUrl, totalPrice, list, type]);\n\n  const { next_redirect_pc_url } = obj;\n\n  return { next_redirect_pc_url };\n};\n","import React, { useCallback } from \"react\";\n\n// JSON Array 내 금액에 콤마가 있어서 인식하지 못하기에 split으로 콤마를 없앤 뒤 문자열로 변환 후 다시 콤마 생성\nexport const usePriceComma = () => {\n  const PriceReComma = useCallback((price) => {\n    // if (totalPrice || cartPrice !== 0) {\n    return price\n      ?.split(\",\")\n      .join(\"\")\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    // } else return;\n  }, []);\n\n  const PriceDeleteComma = useCallback((price) => {\n    // if (typeof price === \"string\") {\n    return price?.split(\",\").join(\"\");\n    // }\n  }, []);\n\n  const PriceComma = useCallback((price) => {\n    // if (typeof price === \"number\") {\n    return price?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    // }\n  }, []);\n\n  return { PriceReComma, PriceDeleteComma, PriceComma };\n};\n"],"names":["NotInfo","lazy","ProductRecommend","Container","styled","BasketBox","BasketList","DeliveryInfoBox","DeliveryInfo","DeliveryFreeTextBox","DeliveryPriceSave","Link","DeliveryPriceGaugebox","DeliveryPriceGaugeBar","props","totalProgress","DeliveryPriceGaugeCircleBox","DeliveryPriceGaugeCircle","CheckBox","Check","CheckIcon","check","SelectDelete","ListCart","List","ListContents","ListCheckIcon","CheckInput","ListImageBox","ListImage","ListInfoBox","ListTitle","ListPriceBox","ListPrice","ItemCounterBox","ItemCounter","ItemQuanityNumber","QuanityButton","quanity","ListDelete","BasketBillBox","BasketListTotalPrice","BasketListPrice","DescCart","BasketBottomButton","OrderButton","noChecked","useState","checkBasketList","setCheckBasketList","totalPrice","setTotalPrice","currentPrice","setCurrentPrice","setTotalProgress","dispatch","useDispatch","currentUser","useSelector","state","user","loginPopupModal","setLoginPopupModal","toggleLoginPopupModal","prev","useBasketToggle","currentBasket","myInfo","docRef","usePriceComma","PriceDeleteComma","PriceComma","payReadyURL","usePayReady","next_redirect_pc_url","useEffect","Math","round","map","obj","CheckItem","filter","item","length","price","reduce","l","r","BasketDeleteItem","itemId","product","setBasket","uid","fbFilter","basket","updateDoc","selectDelete","url","text","text2","btn","to","htmlFor","name","id","type","checked","onChange","e","target","UnCheckItem","onClick","list","index","src","image","alt","title","loading","Decrement","Increment","find","window","location","href","setMyInfo","setDocRef","setIsLogin","doc","dbService","toString","onSnapshot","data","toggleIcon","undefined","currentFilter","setObj","appUrl","process","params","cid","partner_order_id","partner_user_id","item_name","quantity","a","b","total_amount","vat_amount","tax_free_amount","approval_url","fail_url","cancel_url","postKakaopay","axios","method","headers","Authorization","then","response","tid","order","setOrder","localStorage","setItem","PriceReComma","useCallback","split","join","replace"],"sourceRoot":""}