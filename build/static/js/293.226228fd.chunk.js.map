{"version":3,"file":"static/js/293.226228fd.chunk.js","mappings":"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","sources":["components/header/RouterHeader.jsx","components/utils/Footer.jsx","hooks/useBasketToggle.jsx","hooks/useInfinityScroll.jsx","hooks/usePriceComma.jsx","components/search/SearchResultItem.jsx","components/search/SearchResultList.jsx","components/search/SearchMain.jsx","pages/Search.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { FiHome, FiSearch } from \"react-icons/fi\";\nimport { TbWorld } from \"react-icons/tb\";\n\nconst Header = styled.div`\n  width: 100%;\n  position: relative;\n  z-index: 20;\n  position: sticky;\n  top: 0;\n  background-color: #fff;\n`;\n\nconst HeaderBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 46px;\n  font-size: 16px;\n  line-height: 46px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  margin: 0 12px;\n`;\n\nconst IconBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :last-of-type {\n    > div {\n      cursor: default;\n    }\n  }\n`;\n\nconst Icon = styled.div`\n  width: 24px;\n  height: 24px;\n  font-size: 22px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  cursor: pointer;\n\n  svg {\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst HeaderName = styled.div`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  font-weight: 700;\n\n  img {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const RouterHeader = ({ title }) => {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n\n  const goHome = () => {\n    navigate(\"/\");\n  };\n\n  return (\n    <Header>\n      <HeaderBox>\n        <IconBox>\n          <Icon onClick={() => navigate(-1)}>\n            <IoIosArrowBack />\n          </Icon>\n          <Icon onClick={goHome}>\n            <FiHome />\n          </Icon>\n        </IconBox>\n\n        <HeaderName>{title}</HeaderName>\n\n        <IconBox>\n          {!pathname.includes(\"/search\") && (\n            <Link to=\"/search\">\n              <Icon>\n                <FiSearch />\n              </Icon>\n            </Link>\n          )}\n          <Icon>\n            <TbWorld />\n          </Icon>\n        </IconBox>\n      </HeaderBox>\n    </Header>\n  );\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport kakaoLogo from \"../../assets/logo_foot_kakao.png\";\nimport markLogo from \"../../assets/mark_info.png\";\n\nconst Container = styled.footer`\n  /* margin-top: 100px; */\n  line-height: 18px;\n  font-family: \"Nanum Gothic\", sans-serif !important;\n  background-color: #fafafa;\n`;\n\nconst Wrapper = styled.div`\n  padding: 25px 16px 64px;\n`;\n\nconst ServiceInfo = styled.div`\n  overflow: hidden;\n  display: flex;\n  flex-wrap: wrap;\n\n  a {\n    margin-right: 6px;\n    font-size: 12px;\n    line-height: 21px;\n    color: #7a7a7a;\n    letter-spacing: -0.04em;\n\n    strong {\n      color: #666;\n      font-weight: bold;\n    }\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n\n  span {\n    float: left;\n    width: 1px;\n    height: 10px;\n    margin: 5px 6px 0 0;\n    font-size: 1px;\n    line-height: 0;\n    background-color: rgba(216, 216, 216, 0.69);\n    color: transparent;\n  }\n`;\n\nconst WrapInfo = styled.div``;\n\nconst AboutInfo = styled.div`\n  overflow: hidden;\n  padding-top: 28px;\n  line-height: 0;\n`;\n\nconst ListInfo = styled.dl`\n  padding: 10px 0 8px;\n  font-size: 11px;\n  letter-spacing: -0.045em;\n  color: #999;\n  display: block;\n\n  dt {\n    float: left;\n    width: 107px;\n  }\n\n  dd {\n    overflow: hidden;\n    display: block;\n    margin-inline-start: 40px;\n  }\n`;\n\nconst MarkInfo = styled.span`\n  float: right;\n  margin-right: 2px;\n\n  img {\n    display: inline-block;\n    width: 100px;\n    height: 28px;\n    vertical-align: top;\n    aspect-ratio: auto 100 / 28;\n  }\n`;\n\nconst BtnInfo = styled(Link)`\n  float: left;\n  height: 28px;\n  padding: 0 8px 0 0;\n\n  img {\n    display: inline-block;\n    width: 36px;\n    height: 12px;\n    margin-top: 5px;\n    vertical-align: top;\n  }\n`;\n\nexport const Footer = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <ServiceInfo>\n          <Link to=\"https://with.kakao.com/character/proposition\">\n            제휴문의\n          </Link>\n          <span>|</span>\n          <Link to=\"https://with.kakao.com/character/proposition\">\n            고객문의\n          </Link>\n          <span>|</span>\n          <Link to=\"https://with.kakao.com/character/proposition\">\n            이용약관\n          </Link>\n          <span>|</span>\n          <Link to=\"https://with.kakao.com/character/proposition\">\n            <strong>개인정보처리방침</strong>\n          </Link>\n          <span>|</span>\n          <Link to=\"https://with.kakao.com/character/proposition\">\n            지식재산권보호센터\n          </Link>\n        </ServiceInfo>\n\n        <WrapInfo>\n          <AboutInfo>\n            <MarkInfo>\n              <img src={markLogo} alt=\"가족친화 우수기업\" />\n            </MarkInfo>\n\n            <BtnInfo to=\"/\">\n              <img src={kakaoLogo} alt=\"kakao\" />\n            </BtnInfo>\n          </AboutInfo>\n          <ListInfo>\n            <dt>(주)카카오</dt>\n            <dd>대표이사 남궁훈, 홍은택</dd>\n            <dt>주소</dt>\n            <dd>제주특별자치도 제주시 첨단로 242</dd>\n            <dt>사업자등록번호</dt>\n            <em to=\"\">\n              <dd> 120-81-47521 </dd>\n            </em>\n            <dt>통신판매업신고번호</dt>\n            <dd>제2015 - 제주아라 - 0032호</dd>\n            <dt>호스팅서비스사업자</dt>\n            <dd>(주)카카오</dd>\n            <dt>구매안전서비스</dt>\n            <em>\n              <dd>신한은행 구매안전서비스 확인</dd>\n            </em>\n            <dt>이메일</dt>\n            <dd>friends.cs@kakaocorp.com </dd>\n            <dt>고객센터</dt>\n            <dd>\n              1577-6263 (통화료발생)\n              <br />\n              전화상담 (평일 09:00~18:00)\n              <br />\n              카카오톡 상담 (평일 09:00~18:00)\n            </dd>\n          </ListInfo>\n        </WrapInfo>\n      </Wrapper>\n    </Container>\n  );\n};\n","import { doc, onSnapshot, updateDoc } from \"firebase/firestore\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { dbService } from \"../fbase\";\nimport { setBasket } from \"../reducer/user\";\n\nexport const useBasketToggle = () => {\n  const dispatch = useDispatch();\n  const [myInfo, setMyInfo] = useState({});\n  const [docRef, setDocRef] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(false);\n  const currentBasket = useSelector((state) => state.user.basket);\n  const currentUser = useSelector((state) => state.user.currentUser);\n\n  useEffect(() => {\n    if (currentUser.uid) {\n      setDocRef(doc(dbService, \"userInfo\", currentUser.uid.toString()));\n    }\n  }, [currentUser.uid]);\n\n  // Firebase 본인 정보 가져오기\n  useEffect(() => {\n    if (docRef) {\n      onSnapshot(docRef, (doc) => {\n        setMyInfo(doc.data());\n        setIsLogin(true);\n      });\n    }\n    // return () => setIsLogin(false);\n  }, [docRef]);\n\n  const toggleIcon =\n    // useCallback(\n    async (itemId, quanity) => {\n      const currentFinded = currentBasket?.find(\n        (item) => item.product === itemId.product\n      );\n\n      if (currentFinded === undefined) {\n        dispatch(\n          setBasket([\n            {\n              id: itemId.id,\n              product: itemId.product,\n              title: itemId.title,\n              price: itemId.price,\n              image: itemId.image,\n              quanity: quanity ? quanity : 1,\n              check: true,\n            },\n            ...currentBasket,\n          ])\n        );\n      } else {\n        const currentFilter = currentBasket?.filter(\n          (item) => item.product !== itemId.product\n        );\n        dispatch(setBasket(currentFilter));\n      }\n\n      if (currentUser.uid) {\n        const fbFinded = myInfo?.basket?.find(\n          (item) => item.product === itemId.product\n        );\n        if (fbFinded === undefined) {\n          await updateDoc(docRef, {\n            basket: [\n              ...myInfo?.basket,\n              {\n                id: itemId.id,\n                product: itemId.product,\n                title: itemId.title,\n                price: itemId.price,\n                image: itemId.image,\n                quanity: quanity ? quanity : 1,\n                check: true,\n              },\n            ],\n          });\n        } else {\n          const fbFilter = myInfo?.basket?.filter(\n            (item) => item.product !== itemId.product\n          );\n          await updateDoc(docRef, {\n            basket: fbFilter,\n          });\n        }\n      }\n    };\n  // [currentBasket, dispatch, docRef, isLogin, myInfo?.basket]\n  // );\n\n  return { toggleIcon, currentBasket, docRef, myInfo };\n};\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useInfiniteQuery, useQueryClient } from \"react-query\";\n\n// 무한 스크롤\nconst useInfinityScroll = (url, count) => {\n  const queryClient = useQueryClient();\n\n  // 라우터 이탈 시 데이터 clean up으로 직접 리셋\n  useEffect(() => {\n    return () => {\n      queryClient.setQueryData([\"infiniteProduct\", url], (data) => ({\n        pages: data?.pages.slice(0, 1),\n        pageParams: data?.pageParams?.slice(0, 1),\n      }));\n    };\n  }, [url]);\n\n  const fetchRepositories = async (page) => {\n    const res = await axios.get(`${url}limit=${count}&page=${page}`);\n    return res.data;\n  };\n\n  const {\n    data: dataList,\n    hasNextPage,\n    fetchNextPage,\n  } = useInfiniteQuery(\n    [\"infiniteProduct\", url],\n    ({ pageParam = 1 }) => {\n      return fetchRepositories(pageParam);\n    },\n    {\n      refetchOnWindowFocus: false,\n      getNextPageParam: (lastPage, allPages) => {\n        const nextPage = allPages.length + 1; //\n        return nextPage ? nextPage : undefined; // 다음 데이터가 있는지 없는지 판단\n      },\n    }\n  );\n\n  const { ref, inView } = useInView();\n\n  useEffect(() => {\n    if (inView && hasNextPage) {\n      fetchNextPage();\n    }\n  }, [fetchNextPage, hasNextPage, inView, url]);\n\n  return { ref, dataList };\n};\n\nexport default useInfinityScroll;\n","import React, { useCallback } from \"react\";\n\n// JSON Array 내 금액에 콤마가 있어서 인식하지 못하기에 split으로 콤마를 없앤 뒤 문자열로 변환 후 다시 콤마 생성\nexport const usePriceComma = () => {\n  const PriceReComma = useCallback((price) => {\n    // if (totalPrice || cartPrice !== 0) {\n    return price\n      ?.split(\",\")\n      .join(\"\")\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    // } else return;\n  }, []);\n\n  const PriceDeleteComma = useCallback((price) => {\n    // if (typeof price === \"string\") {\n    return price?.split(\",\").join(\"\");\n    // }\n  }, []);\n\n  const PriceComma = useCallback((price) => {\n    // if (typeof price === \"number\") {\n    return price?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    // }\n  }, []);\n\n  return { PriceReComma, PriceDeleteComma, PriceComma };\n};\n","import React, { useCallback, lazy } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { BsBag, BsBagFill } from \"react-icons/bs\";\nimport { useBasketToggle } from \"../../hooks/useBasketToggle\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { usePriceComma } from \"../../hooks/usePriceComma\";\nimport useInfinityScroll from \"../../hooks/useInfinityScroll\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nconst NotInfo = lazy(() => import(\"../utils/NotInfo\"));\n\nconst BasketRecommendBox = styled.div`\n  position: relative;\n\n  > strong {\n    display: block;\n    padding: 0 20px 16px;\n    font-size: 22px;\n    line-height: 28px;\n    letter-spacing: -0.017em;\n    font-weight: bold;\n  }\n`;\n\nconst BasketRecommendListBox = styled.ul`\n  padding: 0 13px 100px 12px;\n\n  @media screen and (min-width: 640px) {\n    padding: 0 14px 100px;\n  }\n`;\n\nconst BasketRecommendList = styled.li`\n  display: inline-block;\n  width: 50%;\n  padding: 0 7px 40px 8px;\n  vertical-align: top;\n  box-sizing: border-box;\n\n  @media screen and (min-width: 640px) {\n    width: 33.333%;\n    padding: 0 6px 40px;\n  }\n`;\n\nconst RecommendListBox = styled.div``;\n\nconst RecommendListImage = styled(Link)`\n  display: block;\n  overflow: hidden;\n  position: relative;\n  border-radius: 6px;\n  padding-top: 100%;\n\n  ::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 1;\n    background-color: rgba(0, 0, 0, 0.02);\n    content: \"\";\n  }\n\n  img {\n    display: block;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n`;\n\nconst RecommendListText = styled.div`\n  padding-top: 10px;\n  position: relative;\n  > strong {\n    display: block;\n    display: -webkit-box;\n    overflow: hidden;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 20px;\n    color: #747475;\n    max-height: 40px;\n    text-overflow: ellipsis;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    word-break: break-all;\n    padding-right: 30px;\n  }\n`;\n\nconst RecomendListPrice = styled.div`\n  display: inline-block;\n  padding-top: 4px;\n  font-weight: 700;\n  font-size: 15px;\n  line-height: 24px;\n  vertical-align: top;\n\n  span {\n    font-size: 16px;\n  }\n`;\n\nconst BagButton = styled.button`\n  color: #909092;\n  position: absolute;\n  top: 5px;\n  right: 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    font-size: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 6px;\n  }\n`;\n\nconst SearchResultBox = styled.div`\n  overflow: hidden;\n  padding: 20px 20px 12px;\n\n  > span {\n    strong {\n      font-weight: bold;\n    }\n  }\n`;\n\nexport const SearchResultItem = () => {\n  const [searchParams] = useSearchParams();\n  const keyword = searchParams.get(\"keyword\");\n\n  const { toggleIcon, currentBasket } = useBasketToggle(); //장바구니 커스텀 훅\n  const { PriceComma } = usePriceComma(); // 가격 콤마 커스텀 훅\n\n  // 상품 리스트\n  const api = `${\n    process.env.REACT_APP_SERVER_PORT\n  }/api/search?keyword=${encodeURIComponent(keyword)}&`;\n  const { ref, dataList } = useInfinityScroll(api, 9); // 무한스크롤 커스텀 훅\n\n  // 검색 결과 개수\n  const DataLength = useCallback(async () => {\n    return await axios.get(\n      `${\n        process.env.REACT_APP_SERVER_PORT\n      }/api/searchLength?keyword=${encodeURIComponent(keyword)}`\n    );\n  }, [keyword]);\n\n  const { data: dataLength } = useQuery(\"productList\", DataLength, {\n    refetchOnWindowFocus: false,\n    onError: (e) => console.log(e.message),\n  });\n\n  return (\n    <BasketRecommendBox>\n      {keyword && (\n        <>\n          <SearchResultBox>\n            <span>\n              총 <strong>{dataLength?.data.length}</strong> 개\n            </span>\n          </SearchResultBox>\n          {keyword && dataList?.pages?.flat().length !== 0 ? (\n            <BasketRecommendListBox>\n              {dataList?.pages?.flat().map((list, index) => (\n                <BasketRecommendList key={list.id}>\n                  <RecommendListBox>\n                    <RecommendListImage to={`/detail/${list.product}`}>\n                      <img src={list.image} alt={list.title} loading=\"lazy\" />\n                    </RecommendListImage>\n                    <RecommendListText>\n                      <strong>{list.title}</strong>\n                      <RecomendListPrice>\n                        <span>{PriceComma(list.price)}</span>원\n                      </RecomendListPrice>\n                      <BagButton onClick={(e) => toggleIcon(list)}>\n                        {currentBasket?.filter(\n                          (obj) => obj.product === list.product\n                        ).length > 0 ? (\n                          <BsBagFill style={{ color: \"#ff447f\" }} />\n                        ) : (\n                          <BsBag />\n                        )}\n                      </BagButton>\n                    </RecommendListText>\n                  </RecommendListBox>\n                </BasketRecommendList>\n              ))}\n            </BasketRecommendListBox>\n          ) : (\n            <NotInfo\n              url={\n                \"https://st.kakaocdn.net/commerce_ui/front-friendsshop/real/20221202/101742/assets/images/m960/ico_empty_ryan.png\"\n              }\n              title={\"검색 결과가 없습니다.\"}\n              text={\"다른 검색어를 입력하시거나, \"}\n              text2={\"철자 및 띄어쓰기를 확인해주세요.\"}\n            />\n          )}\n        </>\n      )}\n      <div\n        ref={ref}\n        style={{\n          position: \"absolute\",\n          bottom: \"200px\",\n        }}\n      />\n    </BasketRecommendBox>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { ProductListApi } from \"../../apis/dataApi\";\n\nconst ResultBox = styled.div`\n  padding: 0 0 80px;\n`;\n\nconst ResultListBox = styled.ul`\n  padding-top: 16px;\n`;\n\nconst ResultList = styled.li`\n  a {\n    display: block;\n    padding: 6px 20px;\n    font-size: 16px;\n\n    /* :hover, */\n    :active {\n      background-color: #f7f7f7;\n    }\n  }\n`;\n\nconst NotResultBox = styled.div`\n  padding: 22px 20px;\n\n  p {\n    font-size: 16px;\n    line-height: 20px;\n    color: #aeaeaf;\n  }\n`;\n\nexport const SearchResultList = ({ setFocus, searchText }) => {\n  const [resultItem, setResultItem] = useState([]);\n  const [searchParams] = useSearchParams();\n\n  const { data: dataList } = useQuery(\n    [\"productList\", searchText],\n    ProductListApi,\n    {\n      refetchOnWindowFocus: false,\n      onError: (e) => console.log(e.message),\n    }\n  );\n\n  useEffect(() => {\n    const filter = dataList?.data.filter((list) =>\n      list.title.includes(searchText)\n    );\n    setResultItem(filter);\n  }, [dataList?.data, searchText]);\n\n  return (\n    <>\n      {searchText && (\n        <ResultBox>\n          {resultItem?.length !== 0 ? (\n            <ResultListBox>\n              {resultItem?.map((list, index) => {\n                const parts = list.title.split(\n                  new RegExp(`(${searchText})`, \"gi\")\n                );\n\n                return (\n                  <ResultList key={index}>\n                    <Link to={`/detail/${list.product}`}>\n                      {parts.map((part, index) =>\n                        part.toLowerCase() === searchText.toLowerCase() ? (\n                          <em style={{ color: \"#ff447f\" }} key={index}>\n                            {part}\n                          </em>\n                        ) : (\n                          part\n                        )\n                      )}\n                    </Link>\n                  </ResultList>\n                );\n              })}\n            </ResultListBox>\n          ) : (\n            <NotResultBox>\n              <p>검색 결과가 없습니다.</p>\n            </NotResultBox>\n          )}\n        </ResultBox>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useQuery } from \"react-query\";\nimport { MenuCharacterListApi } from \"../../apis/dataApi\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchCategoryBox = styled.div`\n  padding: 0 0 80px;\n`;\n\nconst SearchCharacterListBox = styled.ul`\n  overflow: hidden;\n  padding: 24px 10px 0 10px;\n\n  @media screen and (min-width: 640px) {\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n`;\n\nconst SearchCharacterList = styled.li`\n  display: inline-block;\n  font-size: 16px;\n  vertical-align: top;\n\n  width: 25%;\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 640px) {\n    width: 104px;\n    margin-bottom: 18px;\n  }\n\n  > a {\n    display: block;\n    padding: 0 10px 0 10px;\n    @media screen and (min-width: 640px) {\n      padding: 0 12px;\n    }\n  }\n`;\n\nconst SearchCharacterImage = styled.span`\n  display: block;\n  width: 100%;\n  padding-top: 100%;\n  border-radius: 100%;\n  background-image: url(${(props) => props.image});\n  background-position: 50%;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  &:hover {\n    background-image: url(${(props) => props.imageH});\n  }\n`;\n\nconst SearchCharacterText = styled.span`\n  display: block;\n  display: -webkit-box;\n  overflow: hidden;\n  padding-top: 8px;\n  font-size: 12px;\n  line-height: 16px;\n  color: #747475;\n  text-align: center;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-break: keep-all;\n  margin: 0 -11px 0 -10px;\n\n  @media screen and (min-width: 640px) {\n    margin: 0 -12px;\n  }\n`;\n\nconst SearchCategoryTextBox = styled.div`\n  span {\n    display: block;\n    margin: 10px 20px 0;\n    padding-top: 22px;\n    border-top: 1px solid #eff0f2;\n    font-weight: 400;\n    font-size: 15px;\n    line-height: 20px;\n  }\n`;\n\nconst SearchCategoryTextList = styled.ul`\n  overflow: hidden;\n  padding: 4px 17px 0;\n`;\n\nconst SearchCategoryText = styled.li`\n  float: left;\n  margin: 8px 3px 0;\n\n  a {\n    display: block;\n    height: 30px;\n    padding: 0 14px;\n    border: 1px solid #dedfe0;\n    border-radius: 15px;\n    line-height: 28px;\n    box-sizing: border-box;\n    font-size: 14px;\n  }\n`;\n\nexport const SearchMain = () => {\n  const { data: dataList1, isLoading1 } = useQuery(\n    \"character\",\n    MenuCharacterListApi,\n    {\n      refetchOnWindowFocus: false,\n      onError: (e) => console.log(e.message),\n    }\n  );\n\n  const category = [\n    \"전체\",\n    \"토이\",\n    \"리빙\",\n    \"잡화\",\n    \"문구\",\n    \"의류\",\n    \"디지털\",\n    \"여행/레져\",\n    \"식품\",\n    \"테마 기획전\",\n  ];\n\n  return (\n    <SearchCategoryBox>\n      <SearchCharacterListBox>\n        {!isLoading1 &&\n          dataList1?.data.map((list, index) => (\n            <SearchCharacterList key={list.id}>\n              <Link to={`/search/result?keyword=${list.title}`}>\n                <SearchCharacterImage\n                  image={list.image}\n                  imageH={list.imageHover}\n                />\n                <SearchCharacterText>{list.title}</SearchCharacterText>\n              </Link>\n            </SearchCharacterList>\n          ))}\n      </SearchCharacterListBox>\n      <SearchCategoryTextBox>\n        <span>카테고리</span>\n        <SearchCategoryTextList>\n          {category.map((list, index) => (\n            <SearchCategoryText key={index}>\n              <Link>{list}</Link>\n            </SearchCategoryText>\n          ))}\n        </SearchCategoryTextList>\n      </SearchCategoryTextBox>\n    </SearchCategoryBox>\n  );\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Route, Routes, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { IoMdCloseCircle } from \"react-icons/io\";\nimport { CiSearch } from \"react-icons/ci\";\nimport { Footer } from \"../components/utils/Footer\";\nimport { RouterHeader } from \"../components/header/RouterHeader\";\nimport { debounce } from \"lodash\";\nimport { useRef } from \"react\";\nimport { SearchResultItem } from \"../components/search/SearchResultItem\";\nimport { SearchResultList } from \"../components/search/SearchResultList\";\nimport { SearchMain } from \"../components/search/SearchMain\";\n\nconst Container = styled.div`\n  width: 100%;\n  outline: none;\n`;\n\nconst SearchBox = styled.div`\n  position: relative;\n  padding: 14px 20px 13px;\n  border-bottom: 1px solid #dedfe0;\n  background-color: #fff;\n`;\n\nconst SearchForm = styled.form``;\n\nconst SearchContents = styled.div`\n  position: relative;\n  height: 25px;\n  padding: 9px 40px 9px 10px;\n  border-radius: 21px;\n  background-color: #f2f2f2;\n  display: flex;\n  align-items: center;\n`;\n\nconst SearchIcon = styled.label`\n  width: 24px;\n  height: 24px;\n  font-size: 23px;\n  text-align: center;\n  margin-right: 6px;\n\n  div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    svg {\n    }\n  }\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  border: 0;\n  font-size: 16px;\n  line-height: 25px;\n  background-color: transparent;\n  outline: none;\n  resize: none;\n`;\n\nconst ResetButton = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  right: 7px;\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    svg {\n      color: #cacbcc;\n      font-size: 22px;\n    }\n  }\n`;\n\nconst Search = () => {\n  const [focus, setFocus] = useState(false);\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const inputRef = useRef();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const keyword = searchParams.get(\"keyword\");\n\n  // 검색어 디바운스\n  const onChangeText = debounce((e) => {\n    setSearchText(e.target.value);\n  }, 200);\n\n  // 검색어 지우기\n  const searchDelete = () => {\n    setSearchText(\"\");\n    inputRef.current.value = \"\";\n    setFocus(false);\n    setIsSubmit(false);\n  };\n\n  // 검색(form enter)했는지 체크\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setFocus(false);\n      setIsSubmit(true);\n      navigate({\n        pathname: \"/search/result\",\n        search: `?keyword=${searchText}`,\n      });\n      inputRef.current.blur();\n    },\n    [navigate, searchText]\n  );\n\n  const onClick = () => {\n    setFocus(true);\n    setIsSubmit(false);\n  };\n\n  // 키워드가 있을 때 (ex. 메뉴 카테고리에서 넘어올 때)\n  useEffect(() => {\n    if (!focus && keyword) {\n      setIsSubmit(true);\n      inputRef.current.value = keyword;\n    }\n    return () => setIsSubmit(false);\n  }, [focus, keyword, setIsSubmit]);\n\n  return (\n    <Container>\n      <RouterHeader title={\"검색\"} />\n\n      <SearchBox>\n        <SearchForm onSubmit={onSubmit}>\n          <SearchContents>\n            <SearchIcon>\n              <div>\n                <CiSearch />\n              </div>\n            </SearchIcon>\n            <SearchInput\n              type=\"text\"\n              ref={inputRef}\n              onClick={onClick}\n              onChange={onChangeText}\n            />\n            {searchText && (\n              <ResetButton onClick={searchDelete}>\n                <span>\n                  <IoMdCloseCircle />\n                </span>\n              </ResetButton>\n            )}\n          </SearchContents>\n        </SearchForm>\n      </SearchBox>\n\n      {!isSubmit ? (\n        <>\n          {focus && searchText.length >= 1 ? (\n            <SearchResultList setFocus={setFocus} searchText={searchText} />\n          ) : (\n            <SearchMain />\n          )}\n        </>\n      ) : (\n        <Routes>\n          <Route path={\"/result\"} element={<SearchResultItem />} />\n        </Routes>\n      )}\n      <Footer />\n    </Container>\n  );\n};\n\nexport default Search;\n"],"names":["Header","styled","HeaderBox","IconBox","Icon","HeaderName","RouterHeader","title","navigate","useNavigate","pathname","useLocation","onClick","includes","to","Container","Wrapper","ServiceInfo","WrapInfo","AboutInfo","ListInfo","MarkInfo","BtnInfo","Link","Footer","src","markLogo","alt","useBasketToggle","dispatch","useDispatch","useState","myInfo","setMyInfo","docRef","setDocRef","setIsLogin","currentBasket","useSelector","state","user","basket","currentUser","useEffect","uid","doc","dbService","toString","onSnapshot","data","toggleIcon","itemId","quanity","undefined","find","item","product","setBasket","id","price","image","check","currentFilter","filter","updateDoc","fbFilter","url","count","queryClient","useQueryClient","setQueryData","pages","slice","pageParams","fetchRepositories","page","axios","res","useInfiniteQuery","pageParam","refetchOnWindowFocus","getNextPageParam","lastPage","allPages","nextPage","length","dataList","hasNextPage","fetchNextPage","useInView","ref","inView","usePriceComma","PriceReComma","useCallback","split","join","replace","PriceDeleteComma","PriceComma","NotInfo","lazy","BasketRecommendBox","BasketRecommendListBox","BasketRecommendList","RecommendListBox","RecommendListImage","RecommendListText","RecomendListPrice","BagButton","SearchResultBox","SearchResultItem","useSearchParams","keyword","get","api","process","encodeURIComponent","useInfinityScroll","DataLength","dataLength","useQuery","onError","e","console","log","message","flat","map","list","index","loading","obj","style","color","text","text2","position","bottom","ResultBox","ResultListBox","ResultList","NotResultBox","SearchResultList","setFocus","searchText","resultItem","setResultItem","ProductListApi","parts","RegExp","part","toLowerCase","SearchCategoryBox","SearchCharacterListBox","SearchCharacterList","SearchCharacterImage","props","imageH","SearchCharacterText","SearchCategoryTextBox","SearchCategoryTextList","SearchCategoryText","SearchMain","MenuCharacterListApi","dataList1","isLoading1","imageHover","SearchBox","SearchForm","SearchContents","SearchIcon","SearchInput","ResetButton","focus","isSubmit","setIsSubmit","setSearchText","inputRef","useRef","onChangeText","debounce","target","value","onSubmit","preventDefault","search","current","blur","type","onChange","path","element"],"sourceRoot":""}