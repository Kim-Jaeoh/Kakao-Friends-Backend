{"version":3,"file":"static/js/927.78545d2b.chunk.js","mappings":"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","sources":["components/myPage/MyPagePayResult.jsx","components/utils/Footer.jsx","hooks/usePriceComma.jsx","hooks/useTimeStamp.jsx"],"sourcesContent":["import axios from \"axios\";\nimport styled from \"@emotion/styled\";\nimport { doc, onSnapshot, updateDoc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { dbService } from \"../../fbase\";\nimport character from \"../../assets/order_complete_lion.gif\";\nimport { Footer } from \"../utils/Footer\";\nimport { useTimeStamp } from \"../../hooks/useTimeStamp\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { ProductListApi } from \"../../apis/dataApi\";\nimport { setBasket } from \"../../reducer/user\";\nimport { Spinner } from \"../utils/Spinner\";\nimport { usePriceComma } from \"../../hooks/usePriceComma\";\nimport { BsCheckCircleFill } from \"react-icons/bs\";\n\nconst MyPagePayResult = () => {\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState([]);\n  const [myInfo, setMyInfo] = useState({});\n  const [dataType, setDataType] = useState([]);\n  const [filterInfo, setFilterInfo] = useState({});\n  const [dbRef, setDocRef] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const currentOrder = useSelector((state) => state.user.order);\n  const currentBasket = useSelector((state) => state.user.basket);\n  const currentUser = useSelector((state) => state.user.currentUser);\n\n  const { timeToString } = useTimeStamp();\n  const { PriceComma } = usePriceComma();\n  const [searchParams] = useSearchParams();\n  const queryClient = useQueryClient();\n\n  const params = {\n    cid: \"TC0ONETIME\",\n    tid: localStorage.getItem(\"tid\"),\n    partner_order_id: \"partner_order_id\",\n    partner_user_id: \"partner_user_id\",\n    pg_token: searchParams.get(\"pg_token\"),\n  };\n\n  // 상품 리스트 데이터 가져오기\n  const { data: dataList } = useQuery(\"productList\", ProductListApi, {\n    refetchOnWindowFocus: false,\n    onError: (e) => console.log(e.message),\n  });\n\n  // search에 따라 데이터 값 설정\n  useEffect(() => {\n    const type = searchParams.get(\"type\");\n    const currentCheckBasket = currentBasket.filter((item) => item.check);\n    setDataType(type === \"direct\" ? currentOrder : currentCheckBasket);\n  }, [currentBasket, currentOrder, searchParams]);\n\n  // Firebase ref 지정\n  useEffect(() => {\n    if (currentUser.uid) {\n      setDocRef(doc(dbService, \"userInfo\", currentUser.uid.toString()));\n    }\n  }, [currentUser.uid]);\n\n  // Firebase 본인 정보 가져오기\n  useEffect(() => {\n    if (dbRef) {\n      onSnapshot(dbRef, (doc) => {\n        setLoading(true);\n        setMyInfo(doc.data());\n      });\n    }\n  }, [dbRef]);\n\n  // 잔여 수량 변경\n  const { mutate } = useMutation(\n    (amount) =>\n      dataType.map((order) => {\n        return axios.patch(\n          `${process.env.REACT_APP_SERVER_PORT}/api/product/${order.product}`,\n          amount\n        );\n      }),\n    {\n      onSuccess: () => {\n        // queryKey가 'productList'로 시작하는 모든 쿼리 무효화\n        queryClient.invalidateQueries(\"productList\");\n      },\n    }\n  );\n\n  // 구매 결과 상태 받아오기\n  useEffect(() => {\n    if (loading && params.pg_token) {\n      const postKakaopay = async () => {\n        await axios({\n          url: \"https://kapi.kakao.com/v1/payment/approve\",\n          method: \"POST\",\n          headers: {\n            Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_ADMIN_KEY}`,\n            \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n          },\n          params,\n        }).then(async (response) => {\n          // 결제 승인에 대한 응답 출력\n          setResult(response.data);\n\n          // 상품 잔여 수량 mutation으로 변경\n          dataType.map((order) => {\n            return mutate({\n              amount: dataList?.data[order.id - 1].amount - order.quanity,\n            });\n          });\n        });\n      };\n      postKakaopay();\n    }\n  }, [loading]);\n\n  // 주문 내역 firebase 업데이트\n  useEffect(() => {\n    if (result.length !== 0) {\n      const userInfo = async () => {\n        await updateDoc(dbRef, {\n          orderList: [\n            ...myInfo?.orderList,\n            {\n              tid: result.tid || \"\",\n              created_at: result.created_at || \"\",\n              orderInfo: dataType?.map((order) => ({\n                quanity: order.quanity,\n                price: order.price,\n                product: order.product,\n                image: order.image,\n                title: order.title,\n              })),\n\n              totalPrice: result.amount?.total,\n              deliveryPrice:\n                result.amount?.total >= 30000 ? \"무료\" : \"+ 3,000원\",\n              usePoint: result.amount?.point,\n              type: result.payment_method_type === \"MONEY\" ? \"현금\" : \"카드\",\n            },\n          ],\n        }).then((res) => {\n          let item = [];\n\n          // 구매한 제품 localStorage에 저장\n          dataType.map((order) => {\n            item.push(order.product);\n            return localStorage.setItem(\"buyItem\", JSON.stringify(item));\n          });\n\n          // 구매한 제품 장바구니에서 삭제\n          orderItemBasketRemove();\n        });\n      };\n      userInfo();\n    }\n  }, [result]);\n\n  // 구매한 제품 장바구니에서 삭제\n  const orderItemBasketRemove = async () => {\n    // localStorage 저장된 값 가져오기\n    const localBuyItem = localStorage.getItem(\"buyItem\");\n\n    if (localBuyItem) {\n      const fbFilter = myInfo?.basket?.filter(\n        (info) => !localBuyItem?.includes(info.product)\n      );\n      const currentFilter = currentBasket?.filter(\n        (basket) => !localBuyItem?.includes(basket.product)\n      );\n\n      dispatch(setBasket(currentFilter));\n      await updateDoc(dbRef, {\n        basket: fbFilter,\n      }).then(localStorage.removeItem(\"buyItem\"));\n    }\n  };\n\n  // 업데이트 된 주문 내역 Firebase로부터 데이터 받아오기\n  useEffect(() => {\n    if (result && loading) {\n      setFilterInfo(\n        ...myInfo?.orderList.filter((order) => order.tid === result?.tid)\n      );\n    }\n  }, [loading, myInfo?.orderList, result]);\n\n  return (\n    <>\n      {result.length !== 0 ? (\n        <>\n          <Container>\n            <OrderInfoBox>\n              <CharacterBox>\n                <img src={character} alt=\"order lion\" loading=\"lazy\" />\n              </CharacterBox>\n              <OrderInfoText>\n                <OrderInfoTitle>\n                  <BsCheckCircleFill /> 주문이 완료되었어요!\n                </OrderInfoTitle>\n                <OrderInfoSub>\n                  주문하신 내역은&nbsp;\n                  <Link to=\"/mypage/orderlist\">'마이 - 주문내역'</Link>\n                  &nbsp;페이지에서도 확인하실 수 있습니다.\n                </OrderInfoSub>\n              </OrderInfoText>\n            </OrderInfoBox>\n\n            <OrderInfoCategory>\n              <OrderListBox>\n                <OrderCategoryText>주문상품 정보</OrderCategoryText>\n                {filterInfo?.orderInfo?.map((list, index) => {\n                  return (\n                    <OrderList key={index}>\n                      <ListContents>\n                        <ListImageBox to={`/detail/${list.product}`}>\n                          <ListImage>\n                            <img\n                              src={list.image}\n                              alt={list.title}\n                              loading=\"lazy\"\n                            />\n                          </ListImage>\n                        </ListImageBox>\n                        <ListInfoBox to={`/detail/${list.product}`}>\n                          <ListInfo>\n                            <ListTitle>{list.title}</ListTitle>\n                            <ListPrice>\n                              {list.price}\n                              &nbsp;|&nbsp;\n                              {list.quanity}개\n                            </ListPrice>\n                          </ListInfo>\n                        </ListInfoBox>\n                      </ListContents>\n                    </OrderList>\n                  );\n                })}\n              </OrderListBox>\n            </OrderInfoCategory>\n\n            <OrderInfoCategory>\n              <OrderCategoryText>결제 정보</OrderCategoryText>\n              <OrderPayInfo>\n                <OrderPayBox>\n                  <OrderPayTitle>주문번호</OrderPayTitle>&nbsp;\n                  <OrderPaySub>{filterInfo?.tid}</OrderPaySub>\n                </OrderPayBox>\n                <OrderPayBox>\n                  <OrderPayTitle>결제일시</OrderPayTitle>&nbsp;\n                  <OrderPaySub>\n                    {filterInfo && timeToString(filterInfo)}\n                  </OrderPaySub>\n                </OrderPayBox>\n                <OrderPayBox>\n                  <OrderPayTitle>결제수단</OrderPayTitle>&nbsp;\n                  <OrderPaySub>{filterInfo?.type}</OrderPaySub>\n                </OrderPayBox>\n\n                <OrderPayBox>\n                  <OrderPayTitle>총 상품금액</OrderPayTitle>&nbsp;\n                  <OrderPaySub>\n                    {PriceComma(filterInfo?.totalPrice)}\n                    <span>원</span>\n                  </OrderPaySub>\n                </OrderPayBox>\n                <OrderPayBox>\n                  <OrderPayTitle>배송비</OrderPayTitle>&nbsp;\n                  <OrderPaySub>\n                    {PriceComma(filterInfo?.deliveryPrice)}\n                    {!filterInfo?.deliveryPrice === \"무료\" ?? <span>원</span>}\n                  </OrderPaySub>\n                </OrderPayBox>\n                <OrderPayBox>\n                  <OrderPayTitle>포인트 사용</OrderPayTitle>&nbsp;\n                  <OrderPaySub>\n                    -&nbsp;{PriceComma(filterInfo?.usePoint)}\n                    <span>원</span>\n                  </OrderPaySub>\n                </OrderPayBox>\n              </OrderPayInfo>\n            </OrderInfoCategory>\n\n            <OrderInfoCategory>\n              <OrderTotalPrice>\n                <OrderPayTitle>최종 결제금액</OrderPayTitle>\n                <OrderPaySub>\n                  {PriceComma(filterInfo?.totalPrice - filterInfo?.usePoint)}\n                  <span>원</span>\n                </OrderPaySub>\n              </OrderTotalPrice>\n            </OrderInfoCategory>\n          </Container>\n          <Footer />\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default MyPagePayResult;\n\nconst Container = styled.main`\n  position: relative;\n  padding: 20px;\n  background-color: #f2f2f2;\n`;\n\nconst OrderInfoBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  background-color: #fff;\n  border-bottom: 4px solid #f2f2f2;\n`;\n\nconst CharacterBox = styled.div`\n  position: absolute;\n  right: 0;\n  /* bottom: 0; */\n  overflow: hidden;\n  width: 100px;\n\n  img {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst OrderInfoText = styled.div`\n  padding: 45px 20px;\n`;\n\nconst OrderInfoTitle = styled.h2`\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 24px;\n  margin-bottom: 6px;\n\n  svg {\n    margin-right: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    opacity: 0.8;\n    position: relative;\n  }\n`;\n\nconst OrderInfoSub = styled.p`\n  a {\n    text-decoration: underline;\n    text-underline-position: under;\n  }\n`;\n\nconst OrderInfoCategory = styled.div`\n  background-color: #fff;\n  padding: 20px;\n  /* margin-bottom: 25px; */\n  :not(:last-of-type) {\n    border-bottom: 2px solid #f2f2f2;\n  }\n`;\n\nconst OrderCategoryText = styled.strong`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: bold;\n  color: #747475;\n`;\n\nconst OrderTotalPrice = styled.strong`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 16px;\n  font-weight: bold;\n\n  :last-of-type {\n    span {\n      font-size: 16px;\n    }\n\n    strong {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst OrderListBox = styled.ul`\n  overflow: hidden;\n  :not(:last-of-type) {\n    margin-bottom: 25px;\n  }\n`;\n\nconst OrderList = styled.li`\n  position: relative;\n  margin: 20px 0px 0;\n  padding: 0 28px 0px 0;\n\n  :not(:last-of-type) {\n    padding-bottom: 20px;\n    border-bottom: 1px solid #f2f2f2;\n  }\n`;\n\nconst OrderPayInfo = styled.div`\n  /* padding: 0 20px; */\n`;\n\nconst OrderPayBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  :not(:last-of-type) {\n    margin-bottom: 8px;\n  }\n\n  :nth-of-type(3) {\n    padding-bottom: 18px;\n    border-bottom: 1px solid #f2f2f2;\n  }\n\n  :nth-of-type(4) {\n    padding-top: 10px;\n  }\n\n  :last-of-type {\n    color: #e95555;\n  }\n`;\n\nconst OrderPayTitle = styled.span`\n  /* display: inline-block; */\n  /* width: 100px; */\n  /* margin: 0 8px 0 0; */\n`;\n\nconst OrderPaySub = styled.strong`\n  span {\n    font-size: 14px;\n    margin-left: 1.6px;\n  }\n`;\n\nconst ListContents = styled.div`\n  overflow: hidden;\n  /* height: 100px; */\n`;\n\nconst ListImageBox = styled(Link)`\n  float: left;\n  position: relative;\n  width: 90px;\n  height: 90px;\n  border-radius: 6px;\n\n  ::before {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 6px;\n    background-color: rgba(0, 0, 0, 0.02);\n    content: \"\";\n  }\n`;\n\nconst ListImage = styled.div`\n  display: block;\n  overflow: hidden;\n  border-radius: 6px;\n\n  img {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst ListInfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: hidden;\n  position: relative;\n  height: 100%;\n  padding: 4px 0 0 16px;\n  box-sizing: border-box;\n`;\n\nconst ListInfo = styled(Link)`\n  display: block;\n`;\n\nconst ListTitle = styled.strong`\n  display: block;\n  display: -webkit-box;\n  overflow: hidden;\n  line-height: 20px;\n  font-size: 14px;\n  font-weight: bold;\n  max-height: 40px;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-break: break-all;\n`;\n\nconst ListPrice = styled.div`\n  padding-top: 2px;\n  font-size: 14px;\n  /* line-height: 24px; */\n  vertical-align: top;\n\n  strong {\n    /* font-weight: 700; */\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport kakaoLogo from \"../../assets/logo_foot_kakao.png\";\nimport markLogo from \"../../assets/mark_info.png\";\n\nconst Container = styled.footer`\n  /* margin-top: 100px; */\n  line-height: 18px;\n  font-family: \"Nanum Gothic\", sans-serif !important;\n  background-color: #fafafa;\n`;\n\nconst Wrapper = styled.div`\n  padding: 25px 16px 64px;\n`;\n\nconst ServiceInfo = styled.div`\n  overflow: hidden;\n  display: flex;\n  flex-wrap: wrap;\n\n  a {\n    margin-right: 6px;\n    font-size: 12px;\n    line-height: 21px;\n    color: #7a7a7a;\n    letter-spacing: -0.04em;\n\n    strong {\n      color: #666;\n      font-weight: bold;\n    }\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n\n  span {\n    float: left;\n    width: 1px;\n    height: 10px;\n    margin: 5px 6px 0 0;\n    font-size: 1px;\n    line-height: 0;\n    background-color: rgba(216, 216, 216, 0.69);\n    color: transparent;\n  }\n`;\n\nconst WrapInfo = styled.div``;\n\nconst AboutInfo = styled.div`\n  overflow: hidden;\n  padding-top: 28px;\n  line-height: 0;\n`;\n\nconst ListInfo = styled.dl`\n  padding: 10px 0 8px;\n  font-size: 11px;\n  letter-spacing: -0.045em;\n  color: #999;\n  display: block;\n\n  dt {\n    float: left;\n    width: 107px;\n  }\n\n  dd {\n    overflow: hidden;\n    display: block;\n    margin-inline-start: 40px;\n  }\n`;\n\nconst MarkInfo = styled.span`\n  float: right;\n  margin-right: 2px;\n\n  img {\n    display: inline-block;\n    width: 100px;\n    height: 28px;\n    vertical-align: top;\n    aspect-ratio: auto 100 / 28;\n  }\n`;\n\nconst BtnInfo = styled(Link)`\n  float: left;\n  height: 28px;\n  padding: 0 8px 0 0;\n\n  img {\n    display: inline-block;\n    width: 36px;\n    height: 12px;\n    margin-top: 5px;\n    vertical-align: top;\n  }\n`;\n\nexport const Footer = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <ServiceInfo>\n          <Link to=\"https://with.kakao.com/character/proposition\">\n            제휴문의\n          </Link>\n          <span>|</span>\n          <Link to=\"https://with.kakao.com/character/proposition\">\n            고객문의\n          </Link>\n          <span>|</span>\n          <Link to=\"https://with.kakao.com/character/proposition\">\n            이용약관\n          </Link>\n          <span>|</span>\n          <Link to=\"https://with.kakao.com/character/proposition\">\n            <strong>개인정보처리방침</strong>\n          </Link>\n          <span>|</span>\n          <Link to=\"https://with.kakao.com/character/proposition\">\n            지식재산권보호센터\n          </Link>\n        </ServiceInfo>\n\n        <WrapInfo>\n          <AboutInfo>\n            <MarkInfo>\n              <img src={markLogo} alt=\"가족친화 우수기업\" />\n            </MarkInfo>\n\n            <BtnInfo to=\"/\">\n              <img src={kakaoLogo} alt=\"kakao\" />\n            </BtnInfo>\n          </AboutInfo>\n          <ListInfo>\n            <dt>(주)카카오</dt>\n            <dd>대표이사 남궁훈, 홍은택</dd>\n            <dt>주소</dt>\n            <dd>제주특별자치도 제주시 첨단로 242</dd>\n            <dt>사업자등록번호</dt>\n            <em to=\"\">\n              <dd> 120-81-47521 </dd>\n            </em>\n            <dt>통신판매업신고번호</dt>\n            <dd>제2015 - 제주아라 - 0032호</dd>\n            <dt>호스팅서비스사업자</dt>\n            <dd>(주)카카오</dd>\n            <dt>구매안전서비스</dt>\n            <em>\n              <dd>신한은행 구매안전서비스 확인</dd>\n            </em>\n            <dt>이메일</dt>\n            <dd>friends.cs@kakaocorp.com </dd>\n            <dt>고객센터</dt>\n            <dd>\n              1577-6263 (통화료발생)\n              <br />\n              전화상담 (평일 09:00~18:00)\n              <br />\n              카카오톡 상담 (평일 09:00~18:00)\n            </dd>\n          </ListInfo>\n        </WrapInfo>\n      </Wrapper>\n    </Container>\n  );\n};\n","import React, { useCallback } from \"react\";\n\n// JSON Array 내 금액에 콤마가 있어서 인식하지 못하기에 split으로 콤마를 없앤 뒤 문자열로 변환 후 다시 콤마 생성\nexport const usePriceComma = () => {\n  const PriceReComma = useCallback((price) => {\n    // if (totalPrice || cartPrice !== 0) {\n    return price\n      ?.split(\",\")\n      .join(\"\")\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    // } else return;\n  }, []);\n\n  const PriceDeleteComma = useCallback((price) => {\n    // if (typeof price === \"string\") {\n    return price?.split(\",\").join(\"\");\n    // }\n  }, []);\n\n  const PriceComma = useCallback((price) => {\n    // if (typeof price === \"number\") {\n    return price?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    // }\n  }, []);\n\n  return { PriceReComma, PriceDeleteComma, PriceComma };\n};\n","export const useTimeStamp = () => {\n  const timeToString = (item) => {\n    const orderDay = new Date(item?.created_at);\n\n    const year = orderDay.getFullYear();\n    const month = (\"0\" + (orderDay.getMonth() + 1)).slice(-2);\n    const day = (\"0\" + orderDay.getDate()).slice(-2);\n    const hours = (\"0\" + orderDay.getHours()).slice(-2);\n    const minutes = (\"0\" + orderDay.getMinutes()).slice(-2);\n    const seconds = (\"0\" + orderDay.getSeconds()).slice(-2);\n    const ampm = hours < 12 ? \"am\" : \"pm\";\n\n    const dateString =\n      year +\n      \"-\" +\n      month +\n      \"-\" +\n      day +\n      \" \" +\n      hours +\n      \":\" +\n      minutes +\n      \":\" +\n      seconds +\n      \" \" +\n      ampm;\n\n    return dateString;\n  };\n  return { timeToString };\n};\n"],"names":["useState","loading","setLoading","result","setResult","myInfo","setMyInfo","dataType","setDataType","filterInfo","setFilterInfo","dbRef","setDocRef","dispatch","useDispatch","currentOrder","useSelector","state","user","order","currentBasket","basket","currentUser","timeToString","useTimeStamp","PriceComma","usePriceComma","useSearchParams","searchParams","queryClient","useQueryClient","params","cid","tid","localStorage","getItem","partner_order_id","partner_user_id","pg_token","get","dataList","useQuery","ProductListApi","refetchOnWindowFocus","onError","e","console","log","message","data","useEffect","type","currentCheckBasket","filter","item","check","uid","doc","dbService","toString","onSnapshot","mutate","useMutation","amount","map","axios","process","product","onSuccess","invalidateQueries","postKakaopay","url","method","headers","Authorization","then","response","id","quanity","length","userInfo","updateDoc","orderList","created_at","orderInfo","price","image","title","totalPrice","total","deliveryPrice","usePoint","point","payment_method_type","res","push","setItem","JSON","stringify","orderItemBasketRemove","localBuyItem","fbFilter","info","includes","currentFilter","setBasket","removeItem","Container","OrderInfoBox","CharacterBox","src","character","alt","OrderInfoText","OrderInfoTitle","OrderInfoSub","to","OrderInfoCategory","OrderListBox","OrderCategoryText","list","index","OrderList","ListContents","ListImageBox","ListImage","ListInfoBox","ListInfo","ListTitle","ListPrice","OrderPayInfo","OrderPayBox","OrderPayTitle","OrderPaySub","OrderTotalPrice","Footer","Spinner","styled","Link","Wrapper","ServiceInfo","WrapInfo","AboutInfo","MarkInfo","BtnInfo","markLogo","PriceReComma","useCallback","split","join","replace","PriceDeleteComma","orderDay","Date","year","getFullYear","month","getMonth","slice","day","getDate","hours","getHours","getMinutes","getSeconds"],"sourceRoot":""}