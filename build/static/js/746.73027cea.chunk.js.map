{"version":3,"file":"static/js/746.73027cea.chunk.js","mappings":"yTAcMA,EAAqBC,EAAAA,EAAAA,IAAU,0PAc/BC,EAAyBD,EAAAA,EAAAA,GAAS,0HAQlCE,EAAsBF,EAAAA,EAAAA,GAAS,gPAa/BG,EAAmBH,EAAAA,EAAAA,IAAU,sBAE7BI,GAAqBJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAY,saA2BjCM,EAAoBN,EAAAA,EAAAA,IAAU,maAoB9BO,EAAoBP,EAAAA,EAAAA,IAAU,qMAa9BQ,EAAYR,EAAAA,EAAAA,OAAa,gXAmG/B,UA7EyB,SAAH,GAAuB,IAAjBS,EAAS,EAATA,UAC1B,GAAoCC,EAAAA,EAAAA,UAAS,IAAG,eAAzCC,EAAU,KAAEC,EAAa,KAChC,GAAsCC,EAAAA,EAAAA,KAA9BC,EAAU,EAAVA,WAAYC,EAAa,EAAbA,cACZC,GAAeC,EAAAA,EAAAA,KAAfD,WAEFE,EAAG,yCAAG,mGACJC,EAAAA,GAAAA,IAAU,GAAD,OACVC,wBAAiC,6BACpC,KAAD,gGAHM,mCAKT,GAAsCC,EAAAA,EAAAA,UACpC,CAAC,cAAeZ,GAChBS,EACA,CACEI,sBAAsB,EACtBC,QAAS,SAACC,GAAC,OAAKC,QAAQC,IAAIF,EAAEG,QAAQ,IAL5BC,EAAQ,EAAdC,KAAyB,EAATC,UAmCxB,OAzBAC,EAAAA,EAAAA,YAAU,WAER,IAEe,EAFXC,GAAMC,EAAAA,EAAAA,WAAkB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUC,MAE1BpB,IACFuB,EAAS,QAAN,EAAGA,SAAG,aAAH,EAAKE,QAAO,SAACC,GAAG,OAAQ,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKC,WAAY3B,CAAS,MAGnC,SAAC4B,GAEnB,IAAK,IAAIC,GAAa,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOE,QAAS,EAAGD,EAAQ,EAAGA,IAAS,CAEtD,IAAME,EAAiBC,KAAKC,MAAMD,KAAKE,UAAYL,EAAQ,IAGrDM,EAAYP,EAAMC,GACxBD,EAAMC,GAASD,EAAMG,GACrBH,EAAMG,GAAkBI,CAC1B,CACF,CAEAC,CAAYb,GACZpB,EAAcoB,EAChB,GAAG,CAAS,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUC,KAAMpB,KAGlB,UAACV,EAAkB,YACjB,mGACA,SAACE,EAAsB,UACV,OAAVU,QAAU,IAAVA,OAAU,EAAVA,EAAYmC,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMV,GAAK,OACvC,SAACpC,EAAmB,WAClB,UAACC,EAAgB,YACf,SAACC,EAAkB,CAAC6C,GAAE,kBAAaD,EAAKZ,SAAU,UAChD,gBAAKc,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,MAAOC,QAAQ,YAEjD,UAAChD,EAAiB,YAChB,4BAAS0C,EAAKK,SACd,UAAC9C,EAAiB,YAChB,0BAAOS,EAAWgC,EAAKO,SAAc,aAEvC,SAAC/C,EAAS,CAACgD,QAAS,kBAAM1C,EAAWkC,EAAK,EAAC,UAC3B,OAAbjC,QAAa,IAAbA,OAAa,EAAbA,EAAemB,QAAO,SAACC,GAAG,OAAKA,EAAIC,UAAYY,EAAKZ,OAAO,IACzDG,QAAS,GACV,SAAC,MAAS,CAACkB,MAAO,CAAEC,MAAO,cAE3B,SAAC,MAAK,aAfUV,EAAKZ,QAoBT,QAKhC,C","sources":["components/utils/ProductRecommend.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useSelector } from \"react-redux\";\nimport { BsBag, BsBagFill } from \"react-icons/bs\";\nimport { useBasketToggle } from \"../../hooks/useBasketToggle\";\nimport { Link } from \"react-router-dom\";\nimport { usePriceComma } from \"../../hooks/usePriceComma\";\nimport { useQuery } from \"react-query\";\nimport { ProductListApi } from \"../../apis/dataApi\";\nimport axios from \"axios\";\nimport { cloneDeep } from \"lodash\";\nimport { doc, onSnapshot } from \"firebase/firestore\";\nimport { dbService } from \"../../fbase\";\n\nconst BasketRecommendBox = styled.div`\n  padding-top: 36px;\n  border-top: 4px solid #f7f7f7;\n\n  > strong {\n    display: block;\n    padding: 0 20px 16px;\n    font-size: 22px;\n    line-height: 28px;\n    letter-spacing: -0.017em;\n    font-weight: bold;\n  }\n`;\n\nconst BasketRecommendListBox = styled.ul`\n  padding: 0 13px 0 12px;\n\n  @media screen and (min-width: 640px) {\n    padding: 0 14px;\n  }\n`;\n\nconst BasketRecommendList = styled.li`\n  display: inline-block;\n  width: 50%;\n  padding: 0 7px 40px 8px;\n  vertical-align: top;\n  box-sizing: border-box;\n\n  @media screen and (min-width: 640px) {\n    width: 33.333%;\n    padding: 0 6px 40px;\n  }\n`;\n\nconst RecommendListBox = styled.div``;\n\nconst RecommendListImage = styled(Link)`\n  display: block;\n  overflow: hidden;\n  position: relative;\n  border-radius: 6px;\n  padding-top: 100%;\n\n  ::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 1;\n    background-color: rgba(0, 0, 0, 0.02);\n    content: \"\";\n  }\n\n  img {\n    display: block;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n`;\n\nconst RecommendListText = styled.div`\n  padding-top: 10px;\n  position: relative;\n  > strong {\n    display: block;\n    display: -webkit-box;\n    overflow: hidden;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 20px;\n    color: #747475;\n    max-height: 40px;\n    text-overflow: ellipsis;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    word-break: break-all;\n    padding-right: 30px;\n  }\n`;\n\nconst RecomendListPrice = styled.div`\n  display: inline-block;\n  padding-top: 4px;\n  font-weight: 700;\n  font-size: 15px;\n  line-height: 24px;\n  vertical-align: top;\n\n  span {\n    font-size: 16px;\n  }\n`;\n\nconst BagButton = styled.button`\n  color: #909092;\n  position: absolute;\n  top: 5px;\n  right: 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    font-size: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 6px;\n  }\n\n  /* @media screen and (min-width: 640px) {\n    right: 6px;\n  } */\n`;\n\nconst ProductRecommend = ({ productId }) => {\n  const [randomItem, setRandomItem] = useState([]);\n  const { toggleIcon, currentBasket } = useBasketToggle(); //장바구니 커스텀 훅\n  const { PriceComma } = usePriceComma(); // 가격 콤마 커스텀 훅\n\n  const api = async () =>\n    await axios.get(\n      `${process.env.REACT_APP_SERVER_PORT}/api/product?amount_ne=0`\n    );\n\n  const { data: dataList, isLoading } = useQuery(\n    [\"productList\", productId],\n    api,\n    {\n      refetchOnWindowFocus: false,\n      onError: (e) => console.log(e.message),\n    }\n  );\n\n  // 추천 목록 랜덤화\n  useEffect(() => {\n    // 객체 깊은 복사\n    let arr = cloneDeep(dataList?.data); // 렌더링이 2번 돼서 cloneDeep으로 해결\n\n    if (productId) {\n      arr = arr?.filter((obj) => obj?.product !== productId);\n    }\n\n    const randomArray = (array) => {\n      // (피셔-예이츠)\n      for (let index = array?.length - 1; index > 0; index--) {\n        // 무작위 index 값을 만든다. (0 이상의 배열 길이 값)\n        const randomPosition = Math.floor(Math.random() * (index + 1));\n\n        // 임시로 원본 값을 저장하고, randomPosition을 사용해 배열 요소를 섞는다.\n        const temporary = array[index];\n        array[index] = array[randomPosition];\n        array[randomPosition] = temporary;\n      }\n    };\n\n    randomArray(arr);\n    setRandomItem(arr);\n  }, [dataList?.data, productId]);\n\n  return (\n    <BasketRecommendBox>\n      <strong>잠깐만, 이 제품은 어때요?</strong>\n      <BasketRecommendListBox>\n        {randomItem?.slice(0, 8).map((list, index) => (\n          <BasketRecommendList key={list.product}>\n            <RecommendListBox>\n              <RecommendListImage to={`/detail/${list.product}`}>\n                <img src={list.image} alt={list.title} loading=\"lazy\" />\n              </RecommendListImage>\n              <RecommendListText>\n                <strong>{list.title}</strong>\n                <RecomendListPrice>\n                  <span>{PriceComma(list.price)}</span>원\n                </RecomendListPrice>\n                <BagButton onClick={() => toggleIcon(list)}>\n                  {currentBasket?.filter((obj) => obj.product === list.product)\n                    .length > 0 ? (\n                    <BsBagFill style={{ color: \"#ff447f\" }} />\n                  ) : (\n                    <BsBag />\n                  )}\n                </BagButton>\n              </RecommendListText>\n            </RecommendListBox>\n          </BasketRecommendList>\n        ))}\n      </BasketRecommendListBox>\n    </BasketRecommendBox>\n  );\n};\n\nexport default ProductRecommend;\n"],"names":["BasketRecommendBox","styled","BasketRecommendListBox","BasketRecommendList","RecommendListBox","RecommendListImage","Link","RecommendListText","RecomendListPrice","BagButton","productId","useState","randomItem","setRandomItem","useBasketToggle","toggleIcon","currentBasket","PriceComma","usePriceComma","api","axios","process","useQuery","refetchOnWindowFocus","onError","e","console","log","message","dataList","data","isLoading","useEffect","arr","cloneDeep","filter","obj","product","array","index","length","randomPosition","Math","floor","random","temporary","randomArray","slice","map","list","to","src","image","alt","title","loading","price","onClick","style","color"],"sourceRoot":""}