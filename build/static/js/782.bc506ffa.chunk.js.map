{"version":3,"file":"static/js/782.bc506ffa.chunk.js","mappings":"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","sources":["components/header/RouterHeader.jsx","hooks/useBasketToggle.jsx","hooks/useLocalStorage.jsx","hooks/usePayReady.jsx","hooks/usePriceComma.jsx","components/utils/Rating.jsx","components/modal/DetailProductModal.jsx","pages/DetailProduct.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { FiHome, FiSearch } from \"react-icons/fi\";\nimport { TbWorld } from \"react-icons/tb\";\n\nconst Header = styled.div`\n  width: 100%;\n  position: relative;\n  z-index: 20;\n  position: sticky;\n  top: 0;\n  background-color: #fff;\n`;\n\nconst HeaderBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 46px;\n  font-size: 16px;\n  line-height: 46px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  margin: 0 12px;\n`;\n\nconst IconBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :last-of-type {\n    > div {\n      cursor: default;\n    }\n  }\n`;\n\nconst Icon = styled.div`\n  width: 24px;\n  height: 24px;\n  font-size: 22px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  cursor: pointer;\n\n  svg {\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst HeaderName = styled.div`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  font-weight: 700;\n\n  img {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const RouterHeader = ({ title }) => {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n\n  const goHome = () => {\n    navigate(\"/\");\n  };\n\n  return (\n    <Header>\n      <HeaderBox>\n        <IconBox>\n          <Icon onClick={() => navigate(-1)}>\n            <IoIosArrowBack />\n          </Icon>\n          <Icon onClick={goHome}>\n            <FiHome />\n          </Icon>\n        </IconBox>\n\n        <HeaderName>{title}</HeaderName>\n\n        <IconBox>\n          {!pathname.includes(\"/search\") && (\n            <Link to=\"/search\">\n              <Icon>\n                <FiSearch />\n              </Icon>\n            </Link>\n          )}\n          <Icon>\n            <TbWorld />\n          </Icon>\n        </IconBox>\n      </HeaderBox>\n    </Header>\n  );\n};\n","import { doc, onSnapshot, updateDoc } from \"firebase/firestore\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { dbService } from \"../fbase\";\nimport { setBasket } from \"../reducer/user\";\n\nexport const useBasketToggle = () => {\n  const dispatch = useDispatch();\n  const [myInfo, setMyInfo] = useState({});\n  const [docRef, setDocRef] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(false);\n  const currentBasket = useSelector((state) => state.user.basket);\n  const currentUser = useSelector((state) => state.user.currentUser);\n\n  useEffect(() => {\n    if (currentUser.uid) {\n      setDocRef(doc(dbService, \"userInfo\", currentUser.uid.toString()));\n    }\n  }, [currentUser.uid]);\n\n  // Firebase 본인 정보 가져오기\n  useEffect(() => {\n    if (docRef) {\n      onSnapshot(docRef, (doc) => {\n        setMyInfo(doc.data());\n        setIsLogin(true);\n      });\n    }\n    // return () => setIsLogin(false);\n  }, [docRef]);\n\n  const toggleIcon =\n    // useCallback(\n    async (itemId, quanity) => {\n      const currentFinded = currentBasket?.find(\n        (item) => item.product === itemId.product\n      );\n\n      if (currentFinded === undefined) {\n        dispatch(\n          setBasket([\n            {\n              id: itemId.id,\n              product: itemId.product,\n              title: itemId.title,\n              price: itemId.price,\n              image: itemId.image,\n              quanity: quanity ? quanity : 1,\n              check: true,\n            },\n            ...currentBasket,\n          ])\n        );\n      } else {\n        const currentFilter = currentBasket?.filter(\n          (item) => item.product !== itemId.product\n        );\n        dispatch(setBasket(currentFilter));\n      }\n\n      if (currentUser.uid) {\n        const fbFinded = myInfo?.basket?.find(\n          (item) => item.product === itemId.product\n        );\n        if (fbFinded === undefined) {\n          await updateDoc(docRef, {\n            basket: [\n              ...myInfo?.basket,\n              {\n                id: itemId.id,\n                product: itemId.product,\n                title: itemId.title,\n                price: itemId.price,\n                image: itemId.image,\n                quanity: quanity ? quanity : 1,\n                check: true,\n              },\n            ],\n          });\n        } else {\n          const fbFilter = myInfo?.basket?.filter(\n            (item) => item.product !== itemId.product\n          );\n          await updateDoc(docRef, {\n            basket: fbFilter,\n          });\n        }\n      }\n    };\n  // [currentBasket, dispatch, docRef, isLogin, myInfo?.basket]\n  // );\n\n  return { toggleIcon, currentBasket, docRef, myInfo };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\n\nexport const useLocalStorage = () => {\n  let { id } = useParams();\n  const { pathname } = useLocation();\n  const [viewedItems, setViewedItems] = useState([]);\n\n  useEffect(() => {\n    // localStorage의 데이터를 꺼냄\n    let view = localStorage.getItem(\"viewedItems\");\n\n    // 최초 접속시 localStorage에 데이터가 없을 경우 새로운 배열을 생성\n    if (view == null) {\n      view = [];\n    } else {\n      // view 자료를 꺼내 배열로 파싱 후 다시 view에 저장\n      view = JSON.parse(view);\n    }\n\n    if (id) {\n      // 현재 상품 id를 view 저장\n      if (view.length <= 20) {\n        view.unshift(+id);\n      } else {\n        view.pop();\n        // view.unshift(+id);\n      }\n\n      // 중복된 데이터를 넣지 않는 set 자료형에 view를 담아 중복을 제거\n      view = new Set(view);\n\n      // 중복 제거된 set 자료형의 view를 일반 배열로 변경\n      view = [...view];\n    }\n\n    // localStorage에 데이터를 JSON 자료형으로 저장\n    localStorage.setItem(\"viewedItems\", JSON.stringify(view));\n    setViewedItems(view);\n  }, [id, pathname]);\n\n  return { viewedItems, setViewedItems };\n};\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setOrder, setTotalPrice } from \"../reducer/user\";\n\nexport const usePayReady = (list, totalPrice, type) => {\n  const [obj, setObj] = useState([]);\n  // const [totalPrice, setTotalPrice] = useState(\"\");\n  const dispatch = useDispatch();\n\n  // 요청 단계 완료 시 승인 단계로 넘어가지는 URL (search 타입 지정)\n  const appUrl = `${process.env.REACT_APP_SERVER_PORT}/mypage/payresult?type=${\n    type === \"direct\" ? \"direct\" : \"basket\"\n  }`;\n  const failUrl = process.env.REACT_APP_SERVER_PORT;\n  const cancelUrl = process.env.REACT_APP_SERVER_PORT;\n\n  useEffect(() => {\n    let params = {};\n\n    if (list?.length !== 0) {\n      params = {\n        cid: \"TC0ONETIME\",\n        partner_order_id: \"partner_order_id\",\n        partner_user_id: \"partner_user_id\",\n        item_name:\n          list?.length === 1\n            ? `${list[0]?.title}`\n            : `${list[0]?.title} 외 ${list?.length - 1}건`,\n        quantity: list\n          ?.map((item) => item?.quanity)\n          ?.reduce((a, b) => a + b, 0),\n        total_amount: totalPrice || 3000,\n        vat_amount: 0,\n        tax_free_amount: 0,\n        approval_url: appUrl,\n        fail_url: failUrl,\n        cancel_url: cancelUrl,\n      };\n\n      const postKakaopay = async () => {\n        await axios(\n          // 프록시에 카카오 도메인을 설정했으므로 결제 준비 url만 넣기\n          {\n            // 설정한 매개변수들\n            method: \"POST\",\n            url: \"https://kapi.kakao.com/v1/payment/ready\",\n            params,\n            headers: {\n              // 카카오 developers에 등록한 admin키 주기\n              Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_ADMIN_KEY}`,\n              \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n            },\n          }\n        ).then((response) => {\n          // 응답에서 필요한 data 구조분해\n          const {\n            data: { next_redirect_pc_url, tid },\n          } = response;\n\n          if (type === \"direct\") {\n            list?.map((order) =>\n              dispatch(\n                setOrder([\n                  {\n                    id: order.id,\n                    quanity: order.quanity,\n                    price: order.price,\n                    product: order.product,\n                    image: order.image,\n                    title: order.title,\n                  },\n                ])\n              )\n            );\n          }\n\n          // 응답 data로 state 갱신\n          setObj({ next_redirect_pc_url, tid });\n          localStorage.setItem(\"tid\", tid);\n        });\n      };\n      postKakaopay();\n    }\n  }, [appUrl, totalPrice, list, type]);\n\n  const { next_redirect_pc_url } = obj;\n\n  return { next_redirect_pc_url };\n};\n","import React, { useCallback } from \"react\";\n\n// JSON Array 내 금액에 콤마가 있어서 인식하지 못하기에 split으로 콤마를 없앤 뒤 문자열로 변환 후 다시 콤마 생성\nexport const usePriceComma = () => {\n  const PriceReComma = useCallback((price) => {\n    // if (totalPrice || cartPrice !== 0) {\n    return price\n      ?.split(\",\")\n      .join(\"\")\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    // } else return;\n  }, []);\n\n  const PriceDeleteComma = useCallback((price) => {\n    // if (typeof price === \"string\") {\n    return price?.split(\",\").join(\"\");\n    // }\n  }, []);\n\n  const PriceComma = useCallback((price) => {\n    // if (typeof price === \"number\") {\n    return price?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    // }\n  }, []);\n\n  return { PriceReComma, PriceDeleteComma, PriceComma };\n};\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { AiFillStar } from \"react-icons/ai\";\nimport { FaStar } from \"react-icons/fa\";\nimport { useMutation } from \"react-query\";\nimport styled from \"@emotion/styled\";\n\nconst Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 20px;\n`;\n\nconst RatingText = styled.span`\n  color: #787878;\n  display: inline-block;\n  padding: 1px 0 0 5px;\n  font-size: 14px;\n  line-height: 15px;\n  vertical-align: top;\n`;\n\nconst Stars = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg:not(:first-of-type) {\n    margin: 0 1px;\n  }\n\n  svg {\n    color: gray;\n    cursor: pointer;\n  }\n\n  :hover svg {\n    color: #ff477e;\n  }\n\n  svg:hover ~ svg {\n    color: gray;\n  }\n\n  .yellowStar {\n    color: #ff477e;\n  }\n`;\n\nexport const Rating = ({ productId, rate }) => {\n  const ARRAY = [0, 1, 2, 3, 4];\n  const [clicked, setClicked] = useState([false, false, false, false, false]);\n\n  const handleStarClick = (index) => {\n    let clickStates = [...clicked];\n    // if (rate < 5) {\n    //   clickStates[rate] = rate <= index ? true : false;\n    // }\n    for (let i = 0; i < 5; i++) {\n      clickStates[i] = i <= index ? true : false;\n    }\n    setClicked(clickStates);\n  };\n\n  return (\n    <Wrap>\n      <Stars>\n        {ARRAY.map((el, idx) => {\n          return (\n            <AiFillStar\n              key={idx}\n              size=\"18\"\n              onClick={() => handleStarClick(el)}\n              className={clicked[el] && \"yellowStar\"}\n            />\n          );\n        })}\n      </Stars>\n      <RatingText></RatingText>\n    </Wrap>\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Modal } from \"@mui/material\";\nimport { BiMinus, BiPlus } from \"react-icons/bi\";\nimport { usePriceComma } from \"../../hooks/usePriceComma\";\nimport { useBasketToggle } from \"../../hooks/useBasketToggle\";\nimport { BsBag, BsBagFill } from \"react-icons/bs\";\nimport { usePayReady } from \"../../hooks/usePayReady\";\nimport { useModalScrollFixed } from \"../../hooks/useModalScrollFixed\";\nimport { LoginPopupModal } from \"./LoginPopupModal\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nexport const DetailProductModal = ({\n  buttonModal,\n  toggleButtonModal,\n  products,\n  setCount,\n}) => {\n  const [loginPopupModal, setLoginPopupModal] = useState(false);\n  const [productPrice, setProductPrice] = useState(\"\");\n  const [totalPrice, setTotalPrice] = useState(\"\");\n  const currentLoginToken = useSelector((state) => state.user.loginToken);\n\n  const product = products[0];\n  const toggleLoginPopupModal = () => setLoginPopupModal((prev) => !prev);\n\n  const { toggleIcon, currentBasket } = useBasketToggle(); //장바구니 커스텀 훅\n  const modalFixed = useModalScrollFixed(buttonModal); // 모달 스크롤 픽스\n  const { next_redirect_pc_url: payReadyURL } = usePayReady(\n    products,\n    totalPrice,\n    \"direct\"\n  ); // 카카오페이 구매 로직 커스텀 훅\n  const { PriceDeleteComma, PriceComma } = usePriceComma(product.price); // 금액 comma\n\n  useEffect(() => {\n    setProductPrice(PriceDeleteComma(product.price) * product?.quanity);\n  }, [product.price, product?.quanity]);\n\n  // 전체 가격\n  useEffect(() => {\n    if (productPrice === 0) {\n      setTotalPrice(\"3000\");\n    } else {\n      setTotalPrice(productPrice >= 30000 ? productPrice : productPrice + 3000);\n    }\n  }, [productPrice]);\n\n  // 제품 수량 변경\n  const countValue = (type) => {\n    if (type === \"minus\" && product.quanity > 1) {\n      setCount((product.quanity -= 1));\n    } else if (type === \"plus\" && product.quanity < 99) {\n      setCount((product.quanity += 1));\n    }\n  };\n\n  // // 수량 키보드 변경\n  // const onChange = useCallback(\n  //   (e) => {\n  //     const productCount = (product.quanity = e.target.value);\n  //     if (isFocus) {\n  //       setCount(productCount.replace(/(^0+)/, \"1\"));\n  //     }\n  //     // if (isFocus === true) {\n  //     // }\n  //   },\n  //   [isFocus, product, setCount]\n  // );\n\n  // 주문하기 새창\n  const orderClick = () => {\n    if (currentLoginToken === \"login\") {\n      window.location.href = `${payReadyURL}`;\n    } else {\n      toggleLoginPopupModal();\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        open={buttonModal}\n        onClose={toggleButtonModal}\n        disableScrollLock={true}\n      >\n        <Wrapper>\n          <Container>\n            <Box>\n              <CountBox>\n                <CountTextBox>\n                  <strong>수량 선택</strong>\n                  <ItemCounterBox>\n                    <ItemCounter>\n                      <QuanityButton\n                        quanity={product.quanity}\n                        type=\"button\"\n                        onClick={() => countValue(\"minus\")}\n                      >\n                        <BiMinus />\n                      </QuanityButton>\n                      <ItemQuanityNumber>{product.quanity}</ItemQuanityNumber>\n                      {/* <input\n                        type=\"number\"\n                        value={product.quanity}\n                        onFocus={() => setIsFocus(true)}\n                        onBlur={() => setIsFocus(false)}\n                        min=\"1\"\n                        max=\"99\"\n                        // onInput={(e) =>\n                        //   e.target.value.replace(\n                        //     (/[^0-9.]/g, \"\").replace(/(\\..*)\\./g, \"$1\" | /(^0+)/, \"\")\n                        //   )\n                        // }\n                        // onChange={onChange}\n                        onWheel={(e) => e.target.blur()} // 마우스 휠 막기\n                      /> */}\n                      <QuanityButton\n                        quanity={product.quanity}\n                        type=\"button\"\n                        onClick={() => countValue(\"plus\")}\n                      >\n                        <BiPlus />\n                      </QuanityButton>\n                    </ItemCounter>\n                  </ItemCounterBox>\n                </CountTextBox>\n              </CountBox>\n              <PriceTextBox>\n                <PriceTitle>상품 금액</PriceTitle>\n                <PriceText>{PriceComma(productPrice)}원</PriceText>\n              </PriceTextBox>\n              <PriceTextBox>\n                <PriceTitle>배송비</PriceTitle>\n                <PriceText>\n                  {productPrice >= 30000 ? \"무료\" : \"3,000원\"}\n                </PriceText>\n              </PriceTextBox>\n              <PriceTextBox>\n                <PriceTitle>총 결제금액</PriceTitle>\n                <PriceText>{PriceComma(totalPrice)}원</PriceText>\n              </PriceTextBox>\n              <BuyButtonBox>\n                <BuyButton>\n                  <BuyButtonText onClick={orderClick}>바로구매</BuyButtonText>\n                  <BagButton\n                    onClick={(e) => toggleIcon(product, product.quanity)}\n                  >\n                    {currentBasket?.filter(\n                      (obj) => obj.product === product.product\n                    ).length > 0 ? (\n                      <BsBagFill style={{ color: \"#fff\" }} />\n                    ) : (\n                      <BsBag />\n                    )}\n                  </BagButton>\n                </BuyButton>\n              </BuyButtonBox>\n            </Box>\n          </Container>\n        </Wrapper>\n      </Modal>\n      {loginPopupModal && (\n        <LoginPopupModal\n          loginPopupModal={loginPopupModal}\n          toggleLoginPopupModal={toggleLoginPopupModal}\n          type={\"two modal\"}\n        />\n      )}\n    </>\n  );\n};\n\nconst Wrapper = styled.div``;\n\nconst Container = styled.div`\n  display: flex;\n  -webkit-box-pack: end;\n  align-items: flex-end;\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  min-width: 320px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 640px) {\n    width: 640px;\n  }\n`;\n\nconst Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-height: 82vh;\n  border-radius: 16px 16px 0 0;\n  background-color: #fff;\n  box-sizing: border-box;\n\n  @media screen and (min-width: 1024px) {\n    max-height: 87vh;\n  }\n`;\n\nconst CountBox = styled.div`\n  min-height: 0;\n  padding-bottom: 24px;\n  overflow-y: auto;\n  padding: 32px 20px;\n  box-sizing: border-box;\n`;\n\nconst CountTextBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 36px;\n  background: #fff;\n  box-sizing: border-box;\n\n  strong {\n    display: inline-block;\n    font-size: 14px;\n    line-height: 20px;\n    font-weight: bold;\n  }\n`;\n\nconst ItemCounterBox = styled.div``;\n\nconst ItemCounter = styled.div`\n  display: block;\n  position: relative;\n  width: 114px;\n  padding: 0 28px;\n  box-sizing: border-box;\n\n  input,\n  div {\n    display: block;\n    width: 58px;\n    height: 36px;\n    border: 1px solid #dedfe0;\n    border-radius: 8px;\n    line-height: 20px;\n    background-color: #fff;\n    box-sizing: border-box;\n    outline: none;\n    resize: none;\n    box-shadow: none;\n    letter-spacing: -0.035em;\n    text-align: center;\n    font-size: 14px;\n    padding: 8px 15px;\n\n    ::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n  }\n`;\n\nconst ItemQuanityNumber = styled.div`\n  cursor: default;\n  user-select: none;\n`;\n\nconst QuanityButton = styled.button`\n  position: absolute;\n  top: 6px;\n  border: 1px solid #dedfe0;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :first-of-type {\n    left: 0;\n    svg {\n      color: ${(props) => (props.quanity > 1 ? \"#3c404b\" : \"#dedfe0\")};\n    }\n    cursor: ${(props) => (props.quanity > 1 ? \"pointer\" : \"default\")};\n  }\n\n  :last-of-type {\n    right: 0;\n    svg {\n      color: ${(props) => (props.quanity >= 1 ? \"#3c404b\" : \"#dedfe0\")};\n    }\n    cursor: ${(props) => (props.quanity < 99 ? \"pointer\" : \"default\")};\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nconst PriceTextBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 66px;\n  padding: 0 21px 0 20px;\n  border-top: 1px solid #eff0f2;\n  background: #fff;\n  box-sizing: border-box;\n\n  &:nth-of-type(4) {\n    span {\n      font-size: 20px;\n      color: #000;\n      font-weight: bold;\n    }\n    strong {\n      font-size: 22px;\n      line-height: 24px;\n      font-weight: bold;\n    }\n  }\n`;\n\nconst PriceTitle = styled.span`\n  font-size: 14px;\n  line-height: 16px;\n  color: #747475;\n`;\n\nconst PriceText = styled.strong`\n  font-size: 16px;\n  line-height: 22px;\n\n  /* span {\n    font-size: 20px;\n    line-height: 24px;\n  } */\n`;\n\nconst BuyButtonBox = styled.div`\n  position: relative;\n`;\n\nconst BuyButton = styled.button`\n  display: block;\n  width: 100%;\n  height: 80px;\n`;\n\nconst BuyButtonText = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  padding: 0 20px;\n  font-size: 18px;\n  font-weight: bold;\n  background-color: #fb2e45;\n  color: #fff;\n`;\n\nconst BagButton = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: auto;\n  height: 100%;\n  display: flex;\n  height: 100%;\n  padding: 0 20px 0 15px;\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n\n  svg {\n    font-size: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 6px;\n  }\n`;\n","import React, { useRef, lazy } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { RouterHeader } from \"../components/header/RouterHeader\";\nimport Flicking from \"@egjs/react-flicking\";\nimport \"@egjs/react-flicking/dist/flicking.css\";\nimport { AutoPlay } from \"@egjs/flicking-plugins\";\nimport \"@egjs/flicking-plugins/dist/pagination.css\";\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { Rating } from \"../components/utils/Rating\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nimport { AiOutlineBell } from \"react-icons/ai\";\nimport { DetailProductModal } from \"../components/modal/DetailProductModal\";\nimport axios from \"axios\";\nconst ProductRecommend = lazy(() =>\n  import(\"../components/utils/ProductRecommend\")\n);\nconst ProductSeen = lazy(() => import(\"../components/utils/ProductSeen\"));\n\nconst Container = styled.main`\n  position: relative;\n  padding-bottom: 70px;\n`;\n\nconst SliderBox = styled.div`\n  overflow: hidden;\n  position: relative;\n  border-radius: 10px;\n  isolation: isolate;\n`;\n\nconst SliderItem = styled.div`\n  position: relative;\n  width: 638px;\n  padding-top: 100%;\n\n  img {\n    position: absolute;\n    left: 0;\n    top: 0;\n    display: block;\n    width: 100%;\n  }\n`;\n\n// const PaginationButton = styled.div`\n//   position: absolute;\n//   z-index: 10;\n//   bottom: 0px;\n//   width: 100%;\n//   height: 20px;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   user-select: none;\n\n//   span {\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     span {\n//       border-radius: 100%;\n//       display: inline-block;\n//       font-size: 1rem;\n//       width: 4px;\n//       height: 4px;\n//       background-color: #dedfe0;\n//       margin: 0 2px;\n//     }\n//   }\n\n//   span:nth-of-type(${(props) => props.slideIndex + 1}) {\n//     span {\n//       background-color: #000;\n//       transform: scaleX(30px);\n//       width: 12px;\n//       border-radius: 3px;\n//     }\n//   }\n// `;\n\nconst ProductInfoBox = styled.div`\n  border-bottom: 1px solid #e6e6e6;\n`;\n\nconst ProductInfo = styled.div`\n  position: relative;\n  margin: 25px 0 30px;\n  padding: 0 117px 0 20px;\n`;\n\nconst ProductTitle = styled.div`\n  display: block;\n  font-size: 28px;\n  line-height: 36px;\n  font-weight: bold;\n`;\n\nconst ProductPrice = styled.div`\n  padding-top: 10px;\n\n  span {\n    font-size: 18px;\n    line-height: 22px;\n    font-weight: 700;\n  }\n`;\n\nconst ProductDetail = styled.div`\n  padding-top: 50px;\n`;\n\nconst BasketBottomButton = styled.div`\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  z-index: 90;\n  width: 100%;\n\n  @media screen and (min-width: 640px) {\n    width: 640px;\n    left: 50%;\n    margin-left: -320px;\n  }\n`;\n\nconst OrderButton = styled.button`\n  display: block;\n  width: 100%;\n  height: 80px;\n  color: #fff;\n  background-color: #fb2e45;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  -webkit-box-lines: multiple;\n  flex-wrap: wrap;\n  padding: 0 20px;\n  font-weight: 700;\n  font-size: 18px;\n  letter-spacing: -0.014em;\n\n  svg {\n    margin-right: 4px;\n  }\n`;\n\nconst DetailProduct = () => {\n  // const [slideIndex, setSlideIndex] = useState(0); // 상세 이미지 더 있을 시\n  const [product, setProduct] = useState([]);\n  const [count, setCount] = useState(1);\n  const [buttonModal, setbuttonModal] = useState(false);\n  const flickingRef = useRef(null);\n  const { id } = useParams();\n  const { viewedItems } = useLocalStorage(); // 로컬 저장 커스텀 훅\n\n  const _plugins = [\n    new AutoPlay({ duration: 3000, direction: \"NEXT\", stopOnHover: true }),\n  ];\n\n  const api = async () => {\n    return await axios.get(\n      `${process.env.REACT_APP_SERVER_PORT}/api/product/${id}`\n    );\n  };\n\n  const { data, isLoading } = useQuery([\"producList\", id], api, {\n    refetchOnWindowFocus: false,\n    onError: (e) => console.log(e.message),\n  });\n\n  useEffect(() => {\n    if (data) {\n      const dataList = data?.data;\n\n      setProduct([\n        {\n          id: dataList?.id,\n          product: dataList?.product,\n          title: dataList?.title,\n          price: dataList?.price,\n          image: dataList?.image,\n          amount: dataList?.amount, // 잔여 수량\n          quanity: count, // 구매할 수량\n        },\n      ]);\n    }\n  }, [count, data, id]);\n\n  // 라우터 변경 시 clean up으로 구매 수량 리셋\n  useEffect(() => {\n    return () => setCount(1);\n  }, [id]);\n\n  const toggleButtonModal = () => {\n    setbuttonModal((prev) => !prev);\n  };\n\n  return (\n    <>\n      {product &&\n        product.map((item) => (\n          <Container key={item.id}>\n            <RouterHeader title={\"제품 상세\"} />\n\n            <SliderBox>\n              <Flicking\n                circular={true}\n                duration={500}\n                autoResize={true}\n                defaultIndex={0}\n                autoInit={true}\n                ref={flickingRef}\n                // onChanged={(e) => {\n                //   setSlideIndex(e.index);\n                // }}\n                changeOnHold={false}\n                moveType={\"strict\"}\n                plugins={_plugins}\n              >\n                <SliderItem>\n                  <img src={item.image} alt=\"\" loading=\"lazy\" />\n                </SliderItem>\n                {/* {item.detailImage.map((item, index) => (\n                <SliderItem key={index}>\n                  <img src={item} alt=\"\" />\n                </SliderItem>\n              ))} */}\n              </Flicking>\n              {/* {item?.detailImage ? (\n                <PaginationButton slideIndex={slideIndex}>\n                  {!isLoading &&\n                    item?.detailImage?.map((list, index) => (\n                      <span key={index}>\n                        <span />\n                      </span>\n                    ))}\n                </PaginationButton>\n              ) : null} */}\n            </SliderBox>\n            <ProductInfoBox>\n              <ProductInfo>\n                <ProductTitle>{item.title}</ProductTitle>\n                <ProductPrice>\n                  <span>{item.price}원</span>\n                </ProductPrice>\n                <Rating id={item.id} rate={3} />\n              </ProductInfo>\n              <ProductDetail></ProductDetail>\n            </ProductInfoBox>\n            <BasketBottomButton>\n              {item.amount !== 0 ? (\n                <OrderButton onClick={toggleButtonModal}>구매하기</OrderButton>\n              ) : (\n                <OrderButton style={{ backgroundColor: \"#3396ff\" }}>\n                  <AiOutlineBell size=\"24\" /> 재입고 알림\n                </OrderButton>\n              )}\n            </BasketBottomButton>\n            <ProductRecommend productId={item.product} />\n            {viewedItems.length > 1 && <ProductSeen productId={item.product} />}\n            {buttonModal && (\n              <DetailProductModal\n                products={product}\n                setCount={setCount}\n                buttonModal={buttonModal}\n                toggleButtonModal={toggleButtonModal}\n              />\n            )}\n          </Container>\n        ))}\n    </>\n  );\n};\n\nexport default DetailProduct;\n"],"names":["Header","styled","HeaderBox","IconBox","Icon","HeaderName","RouterHeader","title","navigate","useNavigate","pathname","useLocation","onClick","includes","to","useBasketToggle","dispatch","useDispatch","useState","myInfo","setMyInfo","docRef","setDocRef","setIsLogin","currentBasket","useSelector","state","user","basket","currentUser","useEffect","uid","doc","dbService","toString","onSnapshot","data","toggleIcon","itemId","quanity","undefined","find","item","product","setBasket","id","price","image","check","currentFilter","filter","updateDoc","fbFilter","useLocalStorage","useParams","viewedItems","setViewedItems","view","localStorage","getItem","JSON","parse","length","unshift","pop","Set","setItem","stringify","usePayReady","list","totalPrice","type","obj","setObj","appUrl","process","params","cid","partner_order_id","partner_user_id","item_name","quantity","map","reduce","a","b","total_amount","vat_amount","tax_free_amount","approval_url","fail_url","cancel_url","postKakaopay","axios","method","url","headers","Authorization","then","response","next_redirect_pc_url","tid","order","setOrder","usePriceComma","PriceReComma","useCallback","split","join","replace","PriceDeleteComma","PriceComma","Wrap","RatingText","Stars","Rating","productId","rate","clicked","setClicked","el","idx","size","index","clickStates","i","handleStarClick","className","DetailProductModal","buttonModal","toggleButtonModal","products","setCount","loginPopupModal","setLoginPopupModal","productPrice","setProductPrice","setTotalPrice","currentLoginToken","loginToken","toggleLoginPopupModal","prev","payReadyURL","useModalScrollFixed","countValue","Modal","open","onClose","disableScrollLock","Wrapper","Container","Box","CountBox","CountTextBox","ItemCounterBox","ItemCounter","QuanityButton","ItemQuanityNumber","PriceTextBox","PriceTitle","PriceText","BuyButtonBox","BuyButton","BuyButtonText","window","location","href","BagButton","e","style","color","LoginPopupModal","props","ProductRecommend","lazy","ProductSeen","SliderBox","SliderItem","ProductInfoBox","ProductInfo","ProductTitle","ProductPrice","ProductDetail","BasketBottomButton","OrderButton","setProduct","count","setbuttonModal","flickingRef","useRef","_plugins","AutoPlay","duration","direction","stopOnHover","api","useQuery","refetchOnWindowFocus","onError","console","log","message","isLoading","dataList","amount","circular","autoResize","defaultIndex","autoInit","ref","changeOnHold","moveType","plugins","src","alt","loading","backgroundColor"],"sourceRoot":""}