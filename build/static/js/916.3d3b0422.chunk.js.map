{"version":3,"file":"static/js/916.3d3b0422.chunk.js","mappings":"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","sources":["components/myPage/MyPageOrderList.jsx","hooks/usePriceComma.jsx","hooks/useTimeStamp.jsx"],"sourcesContent":["import React, { useEffect, useState, lazy } from \"react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\nimport { useTimeStamp } from \"../../hooks/useTimeStamp\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { doc, onSnapshot } from \"firebase/firestore\";\nimport { dbService } from \"../../fbase\";\nimport { usePriceComma } from \"../../hooks/usePriceComma\";\nconst NotInfo = lazy(() => import(\"../utils/NotInfo\"));\n\nconst MyPageOrderList = ({ isLoggedIn }) => {\n  const [orderList, setOrderList] = useState([]);\n  const [myInfo, setMyInfo] = useState([]);\n  // const [docRef, setDocRef] = useState(\"\");\n  const [payStatus, setPayStatus] = useState(\"\");\n  const currentUser = useSelector((state) => state.user.currentUser);\n\n  const { PriceComma } = usePriceComma(); // 시간 포멧 커스텀 훅\n  const { timeToString } = useTimeStamp(); // 시간 포멧 커스텀 훅\n\n  // 결제 상태 로직\n  const paymentMap = {\n    SUCCESS_PAYMENT: \"결제 완료\",\n    PART_CANCEL_PAYMENT: \"부분 취소\",\n    CANCEL_PAYMENT: \"모두 취소\",\n    QUIT_PAYMENT: \"결제 중단\",\n    FAIL_PAYMENT: \"결제 승인 실패\",\n  };\n\n  const executePayment = (paymentType) => {\n    return setPayStatus(paymentMap[paymentType]);\n  };\n\n  // Firebase 본인 정보 가져오기\n  useEffect(() => {\n    const docRef = doc(dbService, \"userInfo\", currentUser.uid.toString());\n    if (docRef) {\n      onSnapshot(docRef, (doc) => {\n        setMyInfo(doc.data());\n      });\n    }\n  }, [currentUser.uid]);\n\n  // 결제 상태\n  useEffect(() => {\n    myInfo?.orderList?.map(\n      async (obj) =>\n        await axios({\n          method: \"GET\",\n          url: \"https://kapi.kakao.com/v1/payment/order\",\n          params: { cid: \"TC0ONETIME\", tid: obj.tid },\n          headers: {\n            Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_ADMIN_KEY}`,\n            \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n          },\n        }).then((r) => {\n          executePayment(r.data.status);\n        })\n    );\n  }, [myInfo?.orderList]);\n\n  // 시간 순서별\n  useEffect(() => {\n    setOrderList(\n      myInfo?.orderList\n        ?.map((list) => list)\n        .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))\n    );\n  }, [myInfo?.orderList]);\n\n  return (\n    <Container>\n      {orderList?.length !== 0 ? (\n        <>\n          {payStatus &&\n            orderList?.map((order) => {\n              const orderInfo = order.orderInfo;\n              return (\n                <Orderbox key={order.tid}>\n                  <OrderInfo>\n                    <span>주문번호 {order.tid}</span>\n                    <p>{timeToString(order)}</p>\n                  </OrderInfo>\n\n                  <OrderListBox>\n                    {orderInfo?.map((list, index) => {\n                      return (\n                        <OrderList key={index}>\n                          <ListContents>\n                            <ListImageBox to={`/detail/${list.product}`}>\n                              <ListImage>\n                                <img\n                                  src={list.image}\n                                  alt={list.title}\n                                  loading=\"lazy\"\n                                />\n                              </ListImage>\n                            </ListImageBox>\n                            <ListInfoBox>\n                              <ListInfo to={`/detail/${list.product}`}>\n                                <ListTitle>{list.title}</ListTitle>\n                                <ListPrice>\n                                  <span>{list.price}</span>원&nbsp;/&nbsp;\n                                  <span>{list.quanity}</span>개\n                                </ListPrice>\n                              </ListInfo>\n                              <ListStatus>\n                                {payStatus}\n                                &nbsp;|&nbsp;\n                                {order.type}\n                              </ListStatus>\n                            </ListInfoBox>\n                          </ListContents>\n                        </OrderList>\n                      );\n                    })}\n                  </OrderListBox>\n\n                  <OrderInfoCategory>\n                    <OrderCategoryText>결제 정보</OrderCategoryText>\n                    <OrderPayInfo>\n                      <OrderPayBox>\n                        <OrderPayTitle>총 상품금액</OrderPayTitle>&nbsp;\n                        <OrderPaySub>\n                          {PriceComma(order.totalPrice)}\n                          <span>원</span>\n                        </OrderPaySub>\n                      </OrderPayBox>\n                      <OrderPayBox>\n                        <OrderPayTitle>배송비</OrderPayTitle>&nbsp;\n                        <OrderPaySub>\n                          {PriceComma(order.deliveryPrice)}\n                          {!order?.deliveryPrice === \"무료\" ?? <span>원</span>}\n                        </OrderPaySub>\n                      </OrderPayBox>\n                      <OrderPayBox>\n                        <OrderPayTitle>포인트 사용</OrderPayTitle>&nbsp;\n                        <OrderPaySub>\n                          -&nbsp;\n                          {PriceComma(order.usePoint)}\n                          <span>원</span>\n                        </OrderPaySub>\n                      </OrderPayBox>\n                    </OrderPayInfo>\n                  </OrderInfoCategory>\n\n                  <OrderInfoCategory>\n                    <OrderTotalPrice>\n                      <OrderPayTitle>최종 결제금액</OrderPayTitle>\n                      <OrderPaySub>\n                        {PriceComma(order.totalPrice - order.usePoint)}\n                        <span>원</span>\n                      </OrderPaySub>\n                    </OrderTotalPrice>\n                  </OrderInfoCategory>\n                </Orderbox>\n              );\n            })}\n        </>\n      ) : (\n        <NotInfo\n          url={\n            \"https://st.kakaocdn.net/commerce_ui/front-friendsshop/real/20221109/181135/assets/images/m960/ico_empty_ryan.png\"\n          }\n          text={\"아직 주문 내역이 없어요.\"}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default MyPageOrderList;\n\nconst Container = styled.div`\n  padding: 20px;\n  /* margin-bottom: -100px; */\n  background-color: #f2f2f2;\n`;\n\nconst Orderbox = styled.div`\n  position: relative;\n  background-color: #fff;\n\n  :not(:last-of-type) {\n    margin-bottom: 20px;\n  }\n`;\n\nconst OrderInfo = styled.div`\n  padding: 15px 20px;\n  border-bottom: 1px solid #f2f2f2;\n\n  > a {\n    display: flex;\n    align-items: center;\n    margin-bottom: 1.5px;\n    font-weight: 500;\n\n    span {\n      display: flex;\n      align-items: center;\n    }\n\n    svg {\n      font-weight: bold;\n      font-size: 14px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin-bottom: 0.5px;\n      margin-left: 2px;\n    }\n  }\n\n  > p {\n    font-size: 13px;\n    color: #747475;\n  }\n`;\n\nconst OrderPriceInfo = styled.div`\n  display: flex;\n  margin-left: auto;\n  /* justify-content: flex-end; */\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n\n  div {\n    :first-of-type {\n      margin-right: 15px;\n      color: #747475;\n      font-weight: 500;\n      font-size: 16px;\n    }\n    font-weight: 700;\n    font-size: 16px;\n  }\n`;\n\nconst OrderListBox = styled.ul`\n  overflow: hidden;\n  border-bottom: 1px solid #f2f2f2;\n`;\n\nconst OrderList = styled.li`\n  position: relative;\n  margin: 20px 20px 0;\n  padding: 0 28px 20px 0;\n\n  :not(:last-of-type) {\n    border-bottom: 1px solid #f2f2f2;\n  }\n`;\n\n//\n\nconst OrderInfoCategory = styled.div`\n  background-color: #fff;\n  padding: 20px;\n  /* margin-bottom: 25px; */\n  :not(:last-of-type) {\n    border-bottom: 1px solid #f2f2f2;\n  }\n`;\n\nconst OrderCategoryText = styled.strong`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: bold;\n  color: #747475;\n`;\n\nconst OrderTotalPrice = styled.strong`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 16px;\n  font-weight: bold;\n\n  :last-of-type {\n    span {\n      font-size: 16px;\n    }\n\n    strong {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst OrderPayInfo = styled.div`\n  /* padding: 0 20px; */\n`;\n\nconst OrderPayBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  :not(:last-of-type) {\n    margin-bottom: 8px;\n  }\n\n  :nth-of-type(3) {\n    color: #e95555;\n    /* padding-bottom: 18px; */\n    /* border-bottom: 1px solid #f2f2f2; */\n  }\n\n  :nth-of-type(4) {\n    padding-top: 10px;\n  }\n`;\n\nconst OrderPayTitle = styled.span`\n  /* display: inline-block; */\n  /* width: 100px; */\n  /* margin: 0 8px 0 0; */\n`;\n\nconst OrderPaySub = styled.strong`\n  span {\n    font-size: 14px;\n    margin-left: 1.6px;\n  }\n`;\n//\nconst ListContents = styled.div`\n  overflow: hidden;\n  height: 100px;\n`;\n\nconst ListImageBox = styled(Link)`\n  float: left;\n  position: relative;\n  width: 100px;\n  height: 100px;\n  border-radius: 6px;\n\n  ::before {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 6px;\n    background-color: rgba(0, 0, 0, 0.02);\n    content: \"\";\n  }\n`;\n\nconst ListImage = styled.div`\n  display: block;\n  overflow: hidden;\n  border-radius: 6px;\n\n  img {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst ListInfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: hidden;\n  position: relative;\n  height: 100%;\n  padding: 4px 0 0 16px;\n  box-sizing: border-box;\n`;\n\nconst ListInfo = styled(Link)`\n  display: block;\n`;\n\nconst ListTitle = styled.strong`\n  display: block;\n  display: -webkit-box;\n  overflow: hidden;\n  line-height: 20px;\n  font-size: 16px;\n  font-weight: 500;\n  max-height: 40px;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-break: break-all;\n`;\n\nconst ListPrice = styled.div`\n  padding-top: 4px;\n  font-size: 15px;\n  line-height: 24px;\n  vertical-align: top;\n\n  /* span {\n    font-size: 15px;\n  } */\n`;\n\nconst ListStatus = styled.p`\n  color: #747475;\n  user-select: none;\n`;\n","import React, { useCallback } from \"react\";\n\n// JSON Array 내 금액에 콤마가 있어서 인식하지 못하기에 split으로 콤마를 없앤 뒤 문자열로 변환 후 다시 콤마 생성\nexport const usePriceComma = () => {\n  const PriceReComma = useCallback((price) => {\n    // if (totalPrice || cartPrice !== 0) {\n    return price\n      ?.split(\",\")\n      .join(\"\")\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    // } else return;\n  }, []);\n\n  const PriceDeleteComma = useCallback((price) => {\n    // if (typeof price === \"string\") {\n    return price?.split(\",\").join(\"\");\n    // }\n  }, []);\n\n  const PriceComma = useCallback((price) => {\n    // if (typeof price === \"number\") {\n    return price?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    // }\n  }, []);\n\n  return { PriceReComma, PriceDeleteComma, PriceComma };\n};\n","export const useTimeStamp = () => {\n  const timeToString = (item) => {\n    const orderDay = new Date(item?.created_at);\n\n    const year = orderDay.getFullYear();\n    const month = (\"0\" + (orderDay.getMonth() + 1)).slice(-2);\n    const day = (\"0\" + orderDay.getDate()).slice(-2);\n    const hours = (\"0\" + orderDay.getHours()).slice(-2);\n    const minutes = (\"0\" + orderDay.getMinutes()).slice(-2);\n    const seconds = (\"0\" + orderDay.getSeconds()).slice(-2);\n    const ampm = hours < 12 ? \"am\" : \"pm\";\n\n    const dateString =\n      year +\n      \"-\" +\n      month +\n      \"-\" +\n      day +\n      \" \" +\n      hours +\n      \":\" +\n      minutes +\n      \":\" +\n      seconds +\n      \" \" +\n      ampm;\n\n    return dateString;\n  };\n  return { timeToString };\n};\n"],"names":["NotInfo","lazy","isLoggedIn","useState","orderList","setOrderList","myInfo","setMyInfo","payStatus","setPayStatus","currentUser","useSelector","state","user","PriceComma","usePriceComma","timeToString","useTimeStamp","paymentMap","SUCCESS_PAYMENT","PART_CANCEL_PAYMENT","CANCEL_PAYMENT","QUIT_PAYMENT","FAIL_PAYMENT","useEffect","docRef","doc","dbService","uid","toString","onSnapshot","data","map","obj","axios","method","url","params","cid","tid","headers","Authorization","process","then","r","paymentType","status","list","sort","a","b","Date","created_at","Container","length","order","orderInfo","Orderbox","OrderInfo","OrderListBox","index","OrderList","ListContents","ListImageBox","to","product","ListImage","src","image","alt","title","loading","ListInfoBox","ListInfo","ListTitle","ListPrice","price","quanity","ListStatus","type","OrderInfoCategory","OrderCategoryText","OrderPayInfo","OrderPayBox","OrderPayTitle","OrderPaySub","totalPrice","deliveryPrice","usePoint","OrderTotalPrice","text","styled","Link","PriceReComma","useCallback","split","join","replace","PriceDeleteComma","item","orderDay","year","getFullYear","month","getMonth","slice","day","getDate","hours","getHours","getMinutes","getSeconds"],"sourceRoot":""}